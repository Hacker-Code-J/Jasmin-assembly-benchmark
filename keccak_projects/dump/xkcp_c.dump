
test_c_xkcp:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 4f 00 00 	mov    0x4fd9(%rip),%rax        # 5fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 62 4f 00 00    	push   0x4f62(%rip)        # 5f88 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 63 4f 00 00 	bnd jmp *0x4f63(%rip)        # 5f90 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop

Disassembly of section .plt.got:

00000000000010b0 <__cxa_finalize@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 3d 4f 00 00 	bnd jmp *0x4f3d(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010c0 <putchar@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 cd 4e 00 00 	bnd jmp *0x4ecd(%rip)        # 5f98 <putchar@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <__stack_chk_fail@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 c5 4e 00 00 	bnd jmp *0x4ec5(%rip)        # 5fa0 <__stack_chk_fail@GLIBC_2.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <__assert_fail@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 bd 4e 00 00 	bnd jmp *0x4ebd(%rip)        # 5fa8 <__assert_fail@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <fputc@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 b5 4e 00 00 	bnd jmp *0x4eb5(%rip)        # 5fb0 <fputc@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <memcpy@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 ad 4e 00 00 	bnd jmp *0x4ead(%rip)        # 5fb8 <memcpy@GLIBC_2.14>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <__isoc99_sscanf@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 a5 4e 00 00 	bnd jmp *0x4ea5(%rip)        # 5fc0 <__isoc99_sscanf@GLIBC_2.7>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__printf_chk@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 9d 4e 00 00 	bnd jmp *0x4e9d(%rip)        # 5fc8 <__printf_chk@GLIBC_2.3.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <__fprintf_chk@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 95 4e 00 00 	bnd jmp *0x4e95(%rip)        # 5fd0 <__fprintf_chk@GLIBC_2.3.4>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001140 <main>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	48 83 ec 08          	sub    $0x8,%rsp
    1148:	31 c0                	xor    %eax,%eax
    114a:	e8 d1 02 00 00       	call   1420 <sha3_tests>
    114f:	31 c0                	xor    %eax,%eax
    1151:	48 83 c4 08          	add    $0x8,%rsp
    1155:	c3                   	ret    
    1156:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    115d:	00 00 00 

0000000000001160 <_start>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	31 ed                	xor    %ebp,%ebp
    1166:	49 89 d1             	mov    %rdx,%r9
    1169:	5e                   	pop    %rsi
    116a:	48 89 e2             	mov    %rsp,%rdx
    116d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1171:	50                   	push   %rax
    1172:	54                   	push   %rsp
    1173:	45 31 c0             	xor    %r8d,%r8d
    1176:	31 c9                	xor    %ecx,%ecx
    1178:	48 8d 3d c1 ff ff ff 	lea    -0x3f(%rip),%rdi        # 1140 <main>
    117f:	ff 15 53 4e 00 00    	call   *0x4e53(%rip)        # 5fd8 <__libc_start_main@GLIBC_2.34>
    1185:	f4                   	hlt    
    1186:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    118d:	00 00 00 

0000000000001190 <deregister_tm_clones>:
    1190:	48 8d 3d 81 50 00 00 	lea    0x5081(%rip),%rdi        # 6218 <__TMC_END__>
    1197:	48 8d 05 7a 50 00 00 	lea    0x507a(%rip),%rax        # 6218 <__TMC_END__>
    119e:	48 39 f8             	cmp    %rdi,%rax
    11a1:	74 15                	je     11b8 <deregister_tm_clones+0x28>
    11a3:	48 8b 05 36 4e 00 00 	mov    0x4e36(%rip),%rax        # 5fe0 <_ITM_deregisterTMCloneTable@Base>
    11aa:	48 85 c0             	test   %rax,%rax
    11ad:	74 09                	je     11b8 <deregister_tm_clones+0x28>
    11af:	ff e0                	jmp    *%rax
    11b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11b8:	c3                   	ret    
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <register_tm_clones>:
    11c0:	48 8d 3d 51 50 00 00 	lea    0x5051(%rip),%rdi        # 6218 <__TMC_END__>
    11c7:	48 8d 35 4a 50 00 00 	lea    0x504a(%rip),%rsi        # 6218 <__TMC_END__>
    11ce:	48 29 fe             	sub    %rdi,%rsi
    11d1:	48 89 f0             	mov    %rsi,%rax
    11d4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11d8:	48 c1 f8 03          	sar    $0x3,%rax
    11dc:	48 01 c6             	add    %rax,%rsi
    11df:	48 d1 fe             	sar    %rsi
    11e2:	74 14                	je     11f8 <register_tm_clones+0x38>
    11e4:	48 8b 05 05 4e 00 00 	mov    0x4e05(%rip),%rax        # 5ff0 <_ITM_registerTMCloneTable@Base>
    11eb:	48 85 c0             	test   %rax,%rax
    11ee:	74 08                	je     11f8 <register_tm_clones+0x38>
    11f0:	ff e0                	jmp    *%rax
    11f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11f8:	c3                   	ret    
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <__do_global_dtors_aux>:
    1200:	f3 0f 1e fa          	endbr64 
    1204:	80 3d 0d 50 00 00 00 	cmpb   $0x0,0x500d(%rip)        # 6218 <__TMC_END__>
    120b:	75 2b                	jne    1238 <__do_global_dtors_aux+0x38>
    120d:	55                   	push   %rbp
    120e:	48 83 3d e2 4d 00 00 	cmpq   $0x0,0x4de2(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    1215:	00 
    1216:	48 89 e5             	mov    %rsp,%rbp
    1219:	74 0c                	je     1227 <__do_global_dtors_aux+0x27>
    121b:	48 8b 3d e6 4d 00 00 	mov    0x4de6(%rip),%rdi        # 6008 <__dso_handle>
    1222:	e8 89 fe ff ff       	call   10b0 <__cxa_finalize@plt>
    1227:	e8 64 ff ff ff       	call   1190 <deregister_tm_clones>
    122c:	c6 05 e5 4f 00 00 01 	movb   $0x1,0x4fe5(%rip)        # 6218 <__TMC_END__>
    1233:	5d                   	pop    %rbp
    1234:	c3                   	ret    
    1235:	0f 1f 00             	nopl   (%rax)
    1238:	c3                   	ret    
    1239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001240 <frame_dummy>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	e9 77 ff ff ff       	jmp    11c0 <register_tm_clones>
    1249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001250 <sha3>:
    1250:	f3 0f 1e fa          	endbr64 
    1254:	41 57                	push   %r15
    1256:	41 56                	push   %r14
    1258:	41 55                	push   %r13
    125a:	49 89 fe             	mov    %rdi,%r14
    125d:	41 54                	push   %r12
    125f:	55                   	push   %rbp
    1260:	53                   	push   %rbx
    1261:	48 89 d3             	mov    %rdx,%rbx
    1264:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    126b:	49 89 f5             	mov    %rsi,%r13
    126e:	48 89 e5             	mov    %rsp,%rbp
    1271:	48 89 ef             	mov    %rbp,%rdi
    1274:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    127b:	00 00 
    127d:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    1284:	00 
    1285:	31 c0                	xor    %eax,%eax
    1287:	e8 94 05 00 00       	call   1820 <KeccakP1600_Initialize>
    128c:	48 85 db             	test   %rbx,%rbx
    128f:	0f 84 cb 00 00 00    	je     1360 <sha3+0x110>
    1295:	45 31 ff             	xor    %r15d,%r15d
    1298:	45 31 e4             	xor    %r12d,%r12d
    129b:	31 c0                	xor    %eax,%eax
    129d:	0f 1f 00             	nopl   (%rax)
    12a0:	41 0f b6 74 05 00    	movzbl 0x0(%r13,%rax,1),%esi
    12a6:	44 89 e2             	mov    %r12d,%edx
    12a9:	48 89 ef             	mov    %rbp,%rdi
    12ac:	41 ff c4             	inc    %r12d
    12af:	e8 ac 05 00 00       	call   1860 <KeccakP1600_AddByte>
    12b4:	4c 89 e0             	mov    %r12,%rax
    12b7:	4d 69 e4 1f 85 eb 51 	imul   $0x51eb851f,%r12,%r12
    12be:	49 c1 ec 26          	shr    $0x26,%r12
    12c2:	41 69 d4 c8 00 00 00 	imul   $0xc8,%r12d,%edx
    12c9:	29 d0                	sub    %edx,%eax
    12cb:	41 89 c4             	mov    %eax,%r12d
    12ce:	41 8d 47 01          	lea    0x1(%r15),%eax
    12d2:	49 89 c7             	mov    %rax,%r15
    12d5:	48 39 d8             	cmp    %rbx,%rax
    12d8:	72 c6                	jb     12a0 <sha3+0x50>
    12da:	45 8d 6c 24 01       	lea    0x1(%r12),%r13d
    12df:	4c 89 e8             	mov    %r13,%rax
    12e2:	4d 69 ed 1f 85 eb 51 	imul   $0x51eb851f,%r13,%r13
    12e9:	49 c1 ed 26          	shr    $0x26,%r13
    12ed:	41 69 d5 c8 00 00 00 	imul   $0xc8,%r13d,%edx
    12f4:	29 d0                	sub    %edx,%eax
    12f6:	41 89 c5             	mov    %eax,%r13d
    12f9:	44 89 e2             	mov    %r12d,%edx
    12fc:	be 06 00 00 00       	mov    $0x6,%esi
    1301:	48 89 ef             	mov    %rbp,%rdi
    1304:	e8 57 05 00 00       	call   1860 <KeccakP1600_AddByte>
    1309:	44 89 ea             	mov    %r13d,%edx
    130c:	be 80 00 00 00       	mov    $0x80,%esi
    1311:	48 89 ef             	mov    %rbp,%rdi
    1314:	e8 47 05 00 00       	call   1860 <KeccakP1600_AddByte>
    1319:	48 89 ef             	mov    %rbp,%rdi
    131c:	e8 6f 0e 00 00       	call   2190 <KeccakP1600_Permute_24rounds>
    1321:	31 d2                	xor    %edx,%edx
    1323:	b9 20 00 00 00       	mov    $0x20,%ecx
    1328:	4c 89 f6             	mov    %r14,%rsi
    132b:	48 89 ef             	mov    %rbp,%rdi
    132e:	e8 8d 0e 00 00       	call   21c0 <KeccakP1600_ExtractBytes>
    1333:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    133a:	00 
    133b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1342:	00 00 
    1344:	75 25                	jne    136b <sha3+0x11b>
    1346:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    134d:	31 c0                	xor    %eax,%eax
    134f:	5b                   	pop    %rbx
    1350:	5d                   	pop    %rbp
    1351:	41 5c                	pop    %r12
    1353:	41 5d                	pop    %r13
    1355:	41 5e                	pop    %r14
    1357:	41 5f                	pop    %r15
    1359:	c3                   	ret    
    135a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1360:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    1366:	45 31 e4             	xor    %r12d,%r12d
    1369:	eb 8e                	jmp    12f9 <sha3+0xa9>
    136b:	e8 60 fd ff ff       	call   10d0 <__stack_chk_fail@plt>

0000000000001370 <compare_bytes>:
    1370:	f3 0f 1e fa          	endbr64 
    1374:	48 85 d2             	test   %rdx,%rdx
    1377:	74 27                	je     13a0 <compare_bytes+0x30>
    1379:	31 c0                	xor    %eax,%eax
    137b:	eb 0b                	jmp    1388 <compare_bytes+0x18>
    137d:	0f 1f 00             	nopl   (%rax)
    1380:	48 ff c0             	inc    %rax
    1383:	48 39 c2             	cmp    %rax,%rdx
    1386:	74 18                	je     13a0 <compare_bytes+0x30>
    1388:	0f b6 0c 06          	movzbl (%rsi,%rax,1),%ecx
    138c:	38 0c 07             	cmp    %cl,(%rdi,%rax,1)
    138f:	74 ef                	je     1380 <compare_bytes+0x10>
    1391:	b8 01 00 00 00       	mov    $0x1,%eax
    1396:	c3                   	ret    
    1397:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    139e:	00 00 
    13a0:	31 c0                	xor    %eax,%eax
    13a2:	c3                   	ret    
    13a3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    13aa:	00 00 00 00 
    13ae:	66 90                	xchg   %ax,%ax

00000000000013b0 <hex_to_bytes>:
    13b0:	f3 0f 1e fa          	endbr64 
    13b4:	48 85 d2             	test   %rdx,%rdx
    13b7:	74 57                	je     1410 <hex_to_bytes+0x60>
    13b9:	41 55                	push   %r13
    13bb:	41 54                	push   %r12
    13bd:	55                   	push   %rbp
    13be:	4c 8d 2c 57          	lea    (%rdi,%rdx,2),%r13
    13c2:	53                   	push   %rbx
    13c3:	48 89 f5             	mov    %rsi,%rbp
    13c6:	48 89 fb             	mov    %rdi,%rbx
    13c9:	4c 8d 25 34 1c 00 00 	lea    0x1c34(%rip),%r12        # 3004 <_IO_stdin_used+0x4>
    13d0:	48 83 ec 08          	sub    $0x8,%rsp
    13d4:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    13db:	00 00 00 00 
    13df:	90                   	nop
    13e0:	48 89 ea             	mov    %rbp,%rdx
    13e3:	48 89 df             	mov    %rbx,%rdi
    13e6:	4c 89 e6             	mov    %r12,%rsi
    13e9:	31 c0                	xor    %eax,%eax
    13eb:	48 83 c3 02          	add    $0x2,%rbx
    13ef:	e8 1c fd ff ff       	call   1110 <__isoc99_sscanf@plt>
    13f4:	48 ff c5             	inc    %rbp
    13f7:	4c 39 eb             	cmp    %r13,%rbx
    13fa:	75 e4                	jne    13e0 <hex_to_bytes+0x30>
    13fc:	48 83 c4 08          	add    $0x8,%rsp
    1400:	31 c0                	xor    %eax,%eax
    1402:	5b                   	pop    %rbx
    1403:	5d                   	pop    %rbp
    1404:	41 5c                	pop    %r12
    1406:	41 5d                	pop    %r13
    1408:	c3                   	ret    
    1409:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1410:	31 c0                	xor    %eax,%eax
    1412:	c3                   	ret    
    1413:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    141a:	00 00 00 00 
    141e:	66 90                	xchg   %ax,%ax

0000000000001420 <sha3_tests>:
    1420:	f3 0f 1e fa          	endbr64 
    1424:	55                   	push   %rbp
    1425:	48 89 e5             	mov    %rsp,%rbp
    1428:	41 57                	push   %r15
    142a:	41 56                	push   %r14
    142c:	41 55                	push   %r13
    142e:	41 54                	push   %r12
    1430:	53                   	push   %rbx
    1431:	4c 8d 75 a0          	lea    -0x60(%rbp),%r14
    1435:	4c 8d 6d c0          	lea    -0x40(%rbp),%r13
    1439:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
    1440:	4c 8d 25 bd 1b 00 00 	lea    0x1bbd(%rip),%r12        # 3004 <_IO_stdin_used+0x4>
    1447:	4c 8d 3d ce 1b 00 00 	lea    0x1bce(%rip),%r15        # 301c <_IO_stdin_used+0x1c>
    144e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1455:	00 00 
    1457:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    145b:	48 8d 05 be 4b 00 00 	lea    0x4bbe(%rip),%rax        # 6020 <test_vectors>
    1462:	48 c7 85 90 fe ff ff 	movq   $0x0,-0x170(%rbp)
    1469:	00 00 00 00 
    146d:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    1474:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    147b:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    1482:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    1486:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
    148d:	0f 1f 00             	nopl   (%rax)
    1490:	48 ff 85 90 fe ff ff 	incq   -0x170(%rbp)
    1497:	48 8d 35 6c 1b 00 00 	lea    0x1b6c(%rip),%rsi        # 300a <_IO_stdin_used+0xa>
    149e:	bf 01 00 00 00       	mov    $0x1,%edi
    14a3:	31 c0                	xor    %eax,%eax
    14a5:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    14ac:	48 89 a5 78 fe ff ff 	mov    %rsp,-0x188(%rbp)
    14b3:	e8 68 fc ff ff       	call   1120 <__printf_chk@plt>
    14b8:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    14bf:	48 89 e6             	mov    %rsp,%rsi
    14c2:	48 8b 38             	mov    (%rax),%rdi
    14c5:	48 8b 48 08          	mov    0x8(%rax),%rcx
    14c9:	48 8b 40 10          	mov    0x10(%rax),%rax
    14cd:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
    14d4:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    14db:	48 8d 47 0f          	lea    0xf(%rdi),%rax
    14df:	48 89 c2             	mov    %rax,%rdx
    14e2:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    14e8:	48 29 c6             	sub    %rax,%rsi
    14eb:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
    14ef:	48 39 f4             	cmp    %rsi,%rsp
    14f2:	74 15                	je     1509 <sha3_tests+0xe9>
    14f4:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    14fb:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1502:	00 00 
    1504:	48 39 f4             	cmp    %rsi,%rsp
    1507:	75 eb                	jne    14f4 <sha3_tests+0xd4>
    1509:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    150f:	48 29 d4             	sub    %rdx,%rsp
    1512:	48 85 d2             	test   %rdx,%rdx
    1515:	74 06                	je     151d <sha3_tests+0xfd>
    1517:	48 83 4c 14 f8 00    	orq    $0x0,-0x8(%rsp,%rdx,1)
    151d:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
    1524:	00 
    1525:	48 89 a5 a0 fe ff ff 	mov    %rsp,-0x160(%rbp)
    152c:	74 5c                	je     158a <sha3_tests+0x16a>
    152e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    1535:	48 89 e2             	mov    %rsp,%rdx
    1538:	4c 89 ad 68 fe ff ff 	mov    %r13,-0x198(%rbp)
    153f:	4c 89 b5 60 fe ff ff 	mov    %r14,-0x1a0(%rbp)
    1546:	49 89 cd             	mov    %rcx,%r13
    1549:	49 89 d6             	mov    %rdx,%r14
    154c:	48 8d 04 41          	lea    (%rcx,%rax,2),%rax
    1550:	48 89 c3             	mov    %rax,%rbx
    1553:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    155a:	00 00 00 00 
    155e:	66 90                	xchg   %ax,%ax
    1560:	4c 89 f2             	mov    %r14,%rdx
    1563:	4c 89 ef             	mov    %r13,%rdi
    1566:	4c 89 e6             	mov    %r12,%rsi
    1569:	31 c0                	xor    %eax,%eax
    156b:	49 83 c5 02          	add    $0x2,%r13
    156f:	e8 9c fb ff ff       	call   1110 <__isoc99_sscanf@plt>
    1574:	49 ff c6             	inc    %r14
    1577:	49 39 dd             	cmp    %rbx,%r13
    157a:	75 e4                	jne    1560 <sha3_tests+0x140>
    157c:	4c 8b ad 68 fe ff ff 	mov    -0x198(%rbp),%r13
    1583:	4c 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%r14
    158a:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
    1591:	4c 89 f3             	mov    %r14,%rbx
    1594:	4c 89 b5 70 fe ff ff 	mov    %r14,-0x190(%rbp)
    159b:	4c 89 b5 68 fe ff ff 	mov    %r14,-0x198(%rbp)
    15a2:	49 89 ce             	mov    %rcx,%r14
    15a5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    15ac:	00 00 00 00 
    15b0:	48 89 da             	mov    %rbx,%rdx
    15b3:	4c 89 f7             	mov    %r14,%rdi
    15b6:	4c 89 e6             	mov    %r12,%rsi
    15b9:	31 c0                	xor    %eax,%eax
    15bb:	48 ff c3             	inc    %rbx
    15be:	e8 4d fb ff ff       	call   1110 <__isoc99_sscanf@plt>
    15c3:	49 83 c6 02          	add    $0x2,%r14
    15c7:	4c 39 eb             	cmp    %r13,%rbx
    15ca:	75 e4                	jne    15b0 <sha3_tests+0x190>
    15cc:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    15d3:	48 8b 9d 70 fe ff ff 	mov    -0x190(%rbp),%rbx
    15da:	4c 8b b5 68 fe ff ff 	mov    -0x198(%rbp),%r14
    15e1:	e8 3a 02 00 00       	call   1820 <KeccakP1600_Initialize>
    15e6:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
    15ed:	00 
    15ee:	0f 84 15 02 00 00    	je     1809 <sha3_tests+0x3e9>
    15f4:	4c 89 b5 60 fe ff ff 	mov    %r14,-0x1a0(%rbp)
    15fb:	4c 8b b5 98 fe ff ff 	mov    -0x168(%rbp),%r14
    1602:	31 c9                	xor    %ecx,%ecx
    1604:	31 d2                	xor    %edx,%edx
    1606:	48 89 9d 70 fe ff ff 	mov    %rbx,-0x190(%rbp)
    160d:	4c 89 ad 68 fe ff ff 	mov    %r13,-0x198(%rbp)
    1614:	31 c0                	xor    %eax,%eax
    1616:	89 d3                	mov    %edx,%ebx
    1618:	41 89 cd             	mov    %ecx,%r13d
    161b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1620:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
    1627:	89 da                	mov    %ebx,%edx
    1629:	4c 89 f7             	mov    %r14,%rdi
    162c:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
    1630:	e8 2b 02 00 00       	call   1860 <KeccakP1600_AddByte>
    1635:	8d 53 01             	lea    0x1(%rbx),%edx
    1638:	48 89 d0             	mov    %rdx,%rax
    163b:	48 69 d2 1f 85 eb 51 	imul   $0x51eb851f,%rdx,%rdx
    1642:	48 c1 ea 26          	shr    $0x26,%rdx
    1646:	69 f2 c8 00 00 00    	imul   $0xc8,%edx,%esi
    164c:	29 f0                	sub    %esi,%eax
    164e:	89 c3                	mov    %eax,%ebx
    1650:	41 8d 45 01          	lea    0x1(%r13),%eax
    1654:	49 89 c5             	mov    %rax,%r13
    1657:	48 39 85 a8 fe ff ff 	cmp    %rax,-0x158(%rbp)
    165e:	77 c0                	ja     1620 <sha3_tests+0x200>
    1660:	89 da                	mov    %ebx,%edx
    1662:	4c 8b ad 68 fe ff ff 	mov    -0x198(%rbp),%r13
    1669:	48 8b 9d 70 fe ff ff 	mov    -0x190(%rbp),%rbx
    1670:	44 8d 42 01          	lea    0x1(%rdx),%r8d
    1674:	4c 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%r14
    167b:	4c 89 c0             	mov    %r8,%rax
    167e:	4d 69 c0 1f 85 eb 51 	imul   $0x51eb851f,%r8,%r8
    1685:	49 c1 e8 26          	shr    $0x26,%r8
    1689:	41 69 c8 c8 00 00 00 	imul   $0xc8,%r8d,%ecx
    1690:	29 c8                	sub    %ecx,%eax
    1692:	41 89 c0             	mov    %eax,%r8d
    1695:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    169c:	be 06 00 00 00       	mov    $0x6,%esi
    16a1:	44 89 85 a8 fe ff ff 	mov    %r8d,-0x158(%rbp)
    16a8:	e8 b3 01 00 00       	call   1860 <KeccakP1600_AddByte>
    16ad:	8b 95 a8 fe ff ff    	mov    -0x158(%rbp),%edx
    16b3:	be 80 00 00 00       	mov    $0x80,%esi
    16b8:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    16bf:	e8 9c 01 00 00       	call   1860 <KeccakP1600_AddByte>
    16c4:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    16cb:	e8 c0 0a 00 00       	call   2190 <KeccakP1600_Permute_24rounds>
    16d0:	48 8b b5 88 fe ff ff 	mov    -0x178(%rbp),%rsi
    16d7:	31 d2                	xor    %edx,%edx
    16d9:	b9 20 00 00 00       	mov    $0x20,%ecx
    16de:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    16e5:	e8 d6 0a 00 00       	call   21c0 <KeccakP1600_ExtractBytes>
    16ea:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    16f1:	31 c0                	xor    %eax,%eax
    16f3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    16fa:	00 00 00 00 
    16fe:	66 90                	xchg   %ax,%ax
    1700:	41 0f b6 0c 06       	movzbl (%r14,%rax,1),%ecx
    1705:	38 0c 02             	cmp    %cl,(%rdx,%rax,1)
    1708:	75 66                	jne    1770 <sha3_tests+0x350>
    170a:	48 ff c0             	inc    %rax
    170d:	48 83 f8 20          	cmp    $0x20,%rax
    1711:	75 ed                	jne    1700 <sha3_tests+0x2e0>
    1713:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    171a:	48 8d 35 11 19 00 00 	lea    0x1911(%rip),%rsi        # 3032 <_IO_stdin_used+0x32>
    1721:	bf 01 00 00 00       	mov    $0x1,%edi
    1726:	31 c0                	xor    %eax,%eax
    1728:	e8 f3 f9 ff ff       	call   1120 <__printf_chk@plt>
    172d:	48 83 85 80 fe ff ff 	addq   $0x18,-0x180(%rbp)
    1734:	18 
    1735:	48 83 bd 90 fe ff ff 	cmpq   $0x15,-0x170(%rbp)
    173c:	15 
    173d:	48 8b a5 78 fe ff ff 	mov    -0x188(%rbp),%rsp
    1744:	0f 85 46 fd ff ff    	jne    1490 <sha3_tests+0x70>
    174a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    174e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1755:	00 00 
    1757:	0f 85 b9 00 00 00    	jne    1816 <sha3_tests+0x3f6>
    175d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    1761:	5b                   	pop    %rbx
    1762:	41 5c                	pop    %r12
    1764:	41 5d                	pop    %r13
    1766:	41 5e                	pop    %r14
    1768:	41 5f                	pop    %r15
    176a:	5d                   	pop    %rbp
    176b:	c3                   	ret    
    176c:	0f 1f 40 00          	nopl   0x0(%rax)
    1770:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    1777:	48 8d 35 c5 18 00 00 	lea    0x18c5(%rip),%rsi        # 3043 <_IO_stdin_used+0x43>
    177e:	bf 01 00 00 00       	mov    $0x1,%edi
    1783:	31 c0                	xor    %eax,%eax
    1785:	e8 96 f9 ff ff       	call   1120 <__printf_chk@plt>
    178a:	48 8d 35 c3 18 00 00 	lea    0x18c3(%rip),%rsi        # 3054 <_IO_stdin_used+0x54>
    1791:	bf 01 00 00 00       	mov    $0x1,%edi
    1796:	31 c0                	xor    %eax,%eax
    1798:	e8 83 f9 ff ff       	call   1120 <__printf_chk@plt>
    179d:	0f 1f 00             	nopl   (%rax)
    17a0:	0f b6 13             	movzbl (%rbx),%edx
    17a3:	4c 89 fe             	mov    %r15,%rsi
    17a6:	bf 01 00 00 00       	mov    $0x1,%edi
    17ab:	31 c0                	xor    %eax,%eax
    17ad:	48 ff c3             	inc    %rbx
    17b0:	e8 6b f9 ff ff       	call   1120 <__printf_chk@plt>
    17b5:	49 39 dd             	cmp    %rbx,%r13
    17b8:	75 e6                	jne    17a0 <sha3_tests+0x380>
    17ba:	48 8d 35 60 18 00 00 	lea    0x1860(%rip),%rsi        # 3021 <_IO_stdin_used+0x21>
    17c1:	bf 01 00 00 00       	mov    $0x1,%edi
    17c6:	31 c0                	xor    %eax,%eax
    17c8:	e8 53 f9 ff ff       	call   1120 <__printf_chk@plt>
    17cd:	48 8b 9d 88 fe ff ff 	mov    -0x178(%rbp),%rbx
    17d4:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    17db:	00 00 00 00 
    17df:	90                   	nop
    17e0:	0f b6 13             	movzbl (%rbx),%edx
    17e3:	4c 89 fe             	mov    %r15,%rsi
    17e6:	bf 01 00 00 00       	mov    $0x1,%edi
    17eb:	31 c0                	xor    %eax,%eax
    17ed:	48 ff c3             	inc    %rbx
    17f0:	e8 2b f9 ff ff       	call   1120 <__printf_chk@plt>
    17f5:	49 39 de             	cmp    %rbx,%r14
    17f8:	75 e6                	jne    17e0 <sha3_tests+0x3c0>
    17fa:	bf 0a 00 00 00       	mov    $0xa,%edi
    17ff:	e8 bc f8 ff ff       	call   10c0 <putchar@plt>
    1804:	e9 24 ff ff ff       	jmp    172d <sha3_tests+0x30d>
    1809:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    180f:	31 d2                	xor    %edx,%edx
    1811:	e9 7f fe ff ff       	jmp    1695 <sha3_tests+0x275>
    1816:	e8 b5 f8 ff ff       	call   10d0 <__stack_chk_fail@plt>
    181b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001820 <KeccakP1600_Initialize>:
    1820:	f3 0f 1e fa          	endbr64 
    1824:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    182b:	48 89 f9             	mov    %rdi,%rcx
    182e:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    1832:	31 c0                	xor    %eax,%eax
    1834:	48 c7 87 b8 00 00 00 	movq   $0x0,0xb8(%rdi)
    183b:	00 00 00 00 
    183f:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    1843:	48 29 f9             	sub    %rdi,%rcx
    1846:	81 c1 c8 00 00 00    	add    $0xc8,%ecx
    184c:	c1 e9 03             	shr    $0x3,%ecx
    184f:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    1852:	c3                   	ret    
    1853:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    185a:	00 00 00 00 
    185e:	66 90                	xchg   %ax,%ax

0000000000001860 <KeccakP1600_AddByte>:
    1860:	f3 0f 1e fa          	endbr64 
    1864:	81 fa c7 00 00 00    	cmp    $0xc7,%edx
    186a:	77 07                	ja     1873 <KeccakP1600_AddByte+0x13>
    186c:	89 d2                	mov    %edx,%edx
    186e:	40 30 34 17          	xor    %sil,(%rdi,%rdx,1)
    1872:	c3                   	ret    
    1873:	50                   	push   %rax
    1874:	48 8d 0d c5 20 00 00 	lea    0x20c5(%rip),%rcx        # 3940 <__PRETTY_FUNCTION__.5>
    187b:	ba 53 00 00 00       	mov    $0x53,%edx
    1880:	48 8d 35 92 1f 00 00 	lea    0x1f92(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    1887:	48 8d 3d a4 1f 00 00 	lea    0x1fa4(%rip),%rdi        # 3832 <_IO_stdin_used+0x832>
    188e:	e8 4d f8 ff ff       	call   10e0 <__assert_fail@plt>
    1893:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    189a:	00 00 00 00 
    189e:	66 90                	xchg   %ax,%ax

00000000000018a0 <KeccakP1600_AddBytes>:
    18a0:	f3 0f 1e fa          	endbr64 
    18a4:	48 83 ec 08          	sub    $0x8,%rsp
    18a8:	81 fa c7 00 00 00    	cmp    $0xc7,%edx
    18ae:	77 3b                	ja     18eb <KeccakP1600_AddBytes+0x4b>
    18b0:	8d 04 0a             	lea    (%rdx,%rcx,1),%eax
    18b3:	3d c8 00 00 00       	cmp    $0xc8,%eax
    18b8:	77 50                	ja     190a <KeccakP1600_AddBytes+0x6a>
    18ba:	85 c9                	test   %ecx,%ecx
    18bc:	74 28                	je     18e6 <KeccakP1600_AddBytes+0x46>
    18be:	8d 41 ff             	lea    -0x1(%rcx),%eax
    18c1:	29 f2                	sub    %esi,%edx
    18c3:	4c 8d 44 06 01       	lea    0x1(%rsi,%rax,1),%r8
    18c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    18cf:	00 
    18d0:	8d 0c 32             	lea    (%rdx,%rsi,1),%ecx
    18d3:	48 83 c6 01          	add    $0x1,%rsi
    18d7:	0f b6 04 0f          	movzbl (%rdi,%rcx,1),%eax
    18db:	32 46 ff             	xor    -0x1(%rsi),%al
    18de:	88 04 0f             	mov    %al,(%rdi,%rcx,1)
    18e1:	4c 39 c6             	cmp    %r8,%rsi
    18e4:	75 ea                	jne    18d0 <KeccakP1600_AddBytes+0x30>
    18e6:	48 83 c4 08          	add    $0x8,%rsp
    18ea:	c3                   	ret    
    18eb:	48 8d 0d 2e 20 00 00 	lea    0x202e(%rip),%rcx        # 3920 <__PRETTY_FUNCTION__.4>
    18f2:	ba 5d 00 00 00       	mov    $0x5d,%edx
    18f7:	48 8d 35 1b 1f 00 00 	lea    0x1f1b(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    18fe:	48 8d 3d 2d 1f 00 00 	lea    0x1f2d(%rip),%rdi        # 3832 <_IO_stdin_used+0x832>
    1905:	e8 d6 f7 ff ff       	call   10e0 <__assert_fail@plt>
    190a:	48 8d 0d 0f 20 00 00 	lea    0x200f(%rip),%rcx        # 3920 <__PRETTY_FUNCTION__.4>
    1911:	ba 5e 00 00 00       	mov    $0x5e,%edx
    1916:	48 8d 35 fc 1e 00 00 	lea    0x1efc(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    191d:	48 8d 3d 1b 1f 00 00 	lea    0x1f1b(%rip),%rdi        # 383f <_IO_stdin_used+0x83f>
    1924:	e8 b7 f7 ff ff       	call   10e0 <__assert_fail@plt>
    1929:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001930 <KeccakP1600_OverwriteBytes>:
    1930:	f3 0f 1e fa          	endbr64 
    1934:	48 83 ec 08          	sub    $0x8,%rsp
    1938:	81 fa c7 00 00 00    	cmp    $0xc7,%edx
    193e:	77 1a                	ja     195a <KeccakP1600_OverwriteBytes+0x2a>
    1940:	8d 04 0a             	lea    (%rdx,%rcx,1),%eax
    1943:	3d c8 00 00 00       	cmp    $0xc8,%eax
    1948:	77 2f                	ja     1979 <KeccakP1600_OverwriteBytes+0x49>
    194a:	89 d2                	mov    %edx,%edx
    194c:	48 83 c4 08          	add    $0x8,%rsp
    1950:	48 01 d7             	add    %rdx,%rdi
    1953:	89 ca                	mov    %ecx,%edx
    1955:	e9 a6 f7 ff ff       	jmp    1100 <memcpy@plt>
    195a:	48 8d 0d 9f 1f 00 00 	lea    0x1f9f(%rip),%rcx        # 3900 <__PRETTY_FUNCTION__.3>
    1961:	ba 67 00 00 00       	mov    $0x67,%edx
    1966:	48 8d 35 ac 1e 00 00 	lea    0x1eac(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    196d:	48 8d 3d be 1e 00 00 	lea    0x1ebe(%rip),%rdi        # 3832 <_IO_stdin_used+0x832>
    1974:	e8 67 f7 ff ff       	call   10e0 <__assert_fail@plt>
    1979:	48 8d 0d 80 1f 00 00 	lea    0x1f80(%rip),%rcx        # 3900 <__PRETTY_FUNCTION__.3>
    1980:	ba 68 00 00 00       	mov    $0x68,%edx
    1985:	48 8d 35 8d 1e 00 00 	lea    0x1e8d(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    198c:	48 8d 3d ac 1e 00 00 	lea    0x1eac(%rip),%rdi        # 383f <_IO_stdin_used+0x83f>
    1993:	e8 48 f7 ff ff       	call   10e0 <__assert_fail@plt>
    1998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    199f:	00 

00000000000019a0 <KeccakP1600_OverwriteWithZeroes>:
    19a0:	f3 0f 1e fa          	endbr64 
    19a4:	81 fe c8 00 00 00    	cmp    $0xc8,%esi
    19aa:	77 75                	ja     1a21 <KeccakP1600_OverwriteWithZeroes+0x81>
    19ac:	48 89 f8             	mov    %rdi,%rax
    19af:	83 fe 08             	cmp    $0x8,%esi
    19b2:	73 1c                	jae    19d0 <KeccakP1600_OverwriteWithZeroes+0x30>
    19b4:	40 f6 c6 04          	test   $0x4,%sil
    19b8:	75 56                	jne    1a10 <KeccakP1600_OverwriteWithZeroes+0x70>
    19ba:	85 f6                	test   %esi,%esi
    19bc:	74 09                	je     19c7 <KeccakP1600_OverwriteWithZeroes+0x27>
    19be:	c6 07 00             	movb   $0x0,(%rdi)
    19c1:	40 f6 c6 02          	test   $0x2,%sil
    19c5:	75 39                	jne    1a00 <KeccakP1600_OverwriteWithZeroes+0x60>
    19c7:	c3                   	ret    
    19c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    19cf:	00 
    19d0:	89 f2                	mov    %esi,%edx
    19d2:	48 c7 07 00 00 00 00 	movq   $0x0,(%rdi)
    19d9:	48 8d 7f 08          	lea    0x8(%rdi),%rdi
    19dd:	48 c7 44 17 f0 00 00 	movq   $0x0,-0x10(%rdi,%rdx,1)
    19e4:	00 00 
    19e6:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    19ea:	48 29 f8             	sub    %rdi,%rax
    19ed:	8d 0c 06             	lea    (%rsi,%rax,1),%ecx
    19f0:	31 c0                	xor    %eax,%eax
    19f2:	c1 e9 03             	shr    $0x3,%ecx
    19f5:	f3 48 ab             	rep stos %rax,%es:(%rdi)
    19f8:	c3                   	ret    
    19f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1a00:	89 f6                	mov    %esi,%esi
    1a02:	31 d2                	xor    %edx,%edx
    1a04:	66 89 54 37 fe       	mov    %dx,-0x2(%rdi,%rsi,1)
    1a09:	c3                   	ret    
    1a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1a10:	89 f6                	mov    %esi,%esi
    1a12:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    1a18:	c7 44 37 fc 00 00 00 	movl   $0x0,-0x4(%rdi,%rsi,1)
    1a1f:	00 
    1a20:	c3                   	ret    
    1a21:	51                   	push   %rcx
    1a22:	ba 70 00 00 00       	mov    $0x70,%edx
    1a27:	48 8d 0d b2 1e 00 00 	lea    0x1eb2(%rip),%rcx        # 38e0 <__PRETTY_FUNCTION__.2>
    1a2e:	48 8d 35 e4 1d 00 00 	lea    0x1de4(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    1a35:	48 8d 3d 18 1e 00 00 	lea    0x1e18(%rip),%rdi        # 3854 <_IO_stdin_used+0x854>
    1a3c:	e8 9f f6 ff ff       	call   10e0 <__assert_fail@plt>
    1a41:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1a48:	00 00 00 00 
    1a4c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001a50 <KeccakP1600Round>:
    1a50:	f3 0f 1e fa          	endbr64 
    1a54:	41 56                	push   %r14
    1a56:	48 89 f8             	mov    %rdi,%rax
    1a59:	89 f6                	mov    %esi,%esi
    1a5b:	41 55                	push   %r13
    1a5d:	41 54                	push   %r12
    1a5f:	55                   	push   %rbp
    1a60:	53                   	push   %rbx
    1a61:	48 81 ec d0 00 00 00 	sub    $0xd0,%rsp
    1a68:	f3 0f 6f 47 78       	movdqu 0x78(%rdi),%xmm0
    1a6d:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    1a71:	f3 0f 6f bf a0 00 00 	movdqu 0xa0(%rdi),%xmm7
    1a78:	00 
    1a79:	f3 0f 6f 4f 28       	movdqu 0x28(%rdi),%xmm1
    1a7e:	64 48 8b 14 25 28 00 	mov    %fs:0x28,%rdx
    1a85:	00 00 
    1a87:	48 89 94 24 c8 00 00 	mov    %rdx,0xc8(%rsp)
    1a8e:	00 
    1a8f:	31 d2                	xor    %edx,%edx
    1a91:	f3 0f 6f 77 60       	movdqu 0x60(%rdi),%xmm6
    1a96:	f3 0f 6f 57 38       	movdqu 0x38(%rdi),%xmm2
    1a9b:	66 0f ef c7          	pxor   %xmm7,%xmm0
    1a9f:	f3 0f 6f 7f 50       	movdqu 0x50(%rdi),%xmm7
    1aa4:	48 33 4f 48          	xor    0x48(%rdi),%rcx
    1aa8:	66 0f ef d6          	pxor   %xmm6,%xmm2
    1aac:	48 33 4f 70          	xor    0x70(%rdi),%rcx
    1ab0:	f3 0f 6f 68 10       	movdqu 0x10(%rax),%xmm5
    1ab5:	66 0f ef cf          	pxor   %xmm7,%xmm1
    1ab9:	f3 0f 6f 3f          	movdqu (%rdi),%xmm7
    1abd:	48 33 8f 98 00 00 00 	xor    0x98(%rdi),%rcx
    1ac4:	66 0f ef c1          	pxor   %xmm1,%xmm0
    1ac8:	f3 0f 6f 8f 88 00 00 	movdqu 0x88(%rdi),%xmm1
    1acf:	00 
    1ad0:	48 33 8f c0 00 00 00 	xor    0xc0(%rdi),%rcx
    1ad7:	66 0f ef c7          	pxor   %xmm7,%xmm0
    1adb:	f3 0f 6f bf b0 00 00 	movdqu 0xb0(%rdi),%xmm7
    1ae2:	00 
    1ae3:	f3 44 0f 6f 08       	movdqu (%rax),%xmm9
    1ae8:	0f 12 d8             	movhlps %xmm0,%xmm3
    1aeb:	66 48 0f 7e c2       	movq   %xmm0,%rdx
    1af0:	f3 44 0f 6f 40 50    	movdqu 0x50(%rax),%xmm8
    1af6:	f3 0f 6f a0 a0 00 00 	movdqu 0xa0(%rax),%xmm4
    1afd:	00 
    1afe:	66 0f ef cf          	pxor   %xmm7,%xmm1
    1b02:	f3 0f 6f 7f 10       	movdqu 0x10(%rdi),%xmm7
    1b07:	66 48 0f 7e df       	movq   %xmm3,%rdi
    1b0c:	66 49 0f 7e da       	movq   %xmm3,%r10
    1b11:	66 0f ef ca          	pxor   %xmm2,%xmm1
    1b15:	48 d1 c7             	rol    %rdi
    1b18:	f3 0f 6f 50 28       	movdqu 0x28(%rax),%xmm2
    1b1d:	66 0f ef cf          	pxor   %xmm7,%xmm1
    1b21:	48 31 cf             	xor    %rcx,%rdi
    1b24:	48 d1 c1             	rol    %rcx
    1b27:	66 49 0f 7e c8       	movq   %xmm1,%r8
    1b2c:	0f 12 f9             	movhlps %xmm1,%xmm7
    1b2f:	66 48 0f 6e c7       	movq   %rdi,%xmm0
    1b34:	49 d1 c0             	rol    %r8
    1b37:	66 48 0f 7e ff       	movq   %xmm7,%rdi
    1b3c:	66 49 0f 7e c9       	movq   %xmm1,%r9
    1b41:	f3 0f 6f 48 38       	movdqu 0x38(%rax),%xmm1
    1b46:	49 31 d0             	xor    %rdx,%r8
    1b49:	48 d1 c7             	rol    %rdi
    1b4c:	4c 31 c9             	xor    %r9,%rcx
    1b4f:	66 49 0f 6e f0       	movq   %r8,%xmm6
    1b54:	4c 31 d7             	xor    %r10,%rdi
    1b57:	66 49 0f 7e f8       	movq   %xmm7,%r8
    1b5c:	48 d1 c2             	rol    %rdx
    1b5f:	66 0f 6c c6          	punpcklqdq %xmm6,%xmm0
    1b63:	66 48 0f 6e df       	movq   %rdi,%xmm3
    1b68:	66 48 0f 6e f1       	movq   %rcx,%xmm6
    1b6d:	4c 31 c2             	xor    %r8,%rdx
    1b70:	66 0f ef d0          	pxor   %xmm0,%xmm2
    1b74:	66 0f 6c de          	punpcklqdq %xmm6,%xmm3
    1b78:	f3 0f 6f 70 78       	movdqu 0x78(%rax),%xmm6
    1b7d:	66 44 0f ef c8       	pxor   %xmm0,%xmm9
    1b82:	66 0f ef eb          	pxor   %xmm3,%xmm5
    1b86:	66 0f ef cb          	pxor   %xmm3,%xmm1
    1b8a:	66 0f ef e0          	pxor   %xmm0,%xmm4
    1b8e:	44 0f 11 08          	movups %xmm9,(%rax)
    1b92:	66 48 0f 7e d1       	movq   %xmm2,%rcx
    1b97:	66 0f 73 da 08       	psrldq $0x8,%xmm2
    1b9c:	66 48 0f 7e ef       	movq   %xmm5,%rdi
    1ba1:	66 0f 73 dd 08       	psrldq $0x8,%xmm5
    1ba6:	48 c1 c9 1c          	ror    $0x1c,%rcx
    1baa:	66 0f ef f0          	pxor   %xmm0,%xmm6
    1bae:	45 0f 12 f1          	movhlps %xmm9,%xmm14
    1bb2:	48 c1 cf 02          	ror    $0x2,%rdi
    1bb6:	49 89 cb             	mov    %rcx,%r11
    1bb9:	66 48 0f 7e d1       	movq   %xmm2,%rcx
    1bbe:	66 49 0f 7e e8       	movq   %xmm5,%r8
    1bc3:	48 c1 c9 14          	ror    $0x14,%rcx
    1bc7:	66 49 0f 6e d3       	movq   %r11,%xmm2
    1bcc:	66 44 0f ef c0       	pxor   %xmm0,%xmm8
    1bd1:	f3 0f 6f 40 60       	movdqu 0x60(%rax),%xmm0
    1bd6:	66 48 0f 6e e9       	movq   %rcx,%xmm5
    1bdb:	66 48 0f 7e c9       	movq   %xmm1,%rcx
    1be0:	66 0f 73 d9 08       	psrldq $0x8,%xmm1
    1be5:	f3 0f 6f b8 88 00 00 	movdqu 0x88(%rax),%xmm7
    1bec:	00 
    1bed:	48 c1 c1 06          	rol    $0x6,%rcx
    1bf1:	66 0f 6c d5          	punpcklqdq %xmm5,%xmm2
    1bf5:	66 0f ef c3          	pxor   %xmm3,%xmm0
    1bf9:	4c 8b 50 20          	mov    0x20(%rax),%r10
    1bfd:	66 48 0f 6e e9       	movq   %rcx,%xmm5
    1c02:	66 48 0f 7e c9       	movq   %xmm1,%rcx
    1c07:	66 4d 0f 7e c3       	movq   %xmm8,%r11
    1c0c:	f3 44 0f 6f a8 b0 00 	movdqu 0xb0(%rax),%xmm13
    1c13:	00 00 
    1c15:	48 c1 c9 09          	ror    $0x9,%rcx
    1c19:	49 c1 c3 03          	rol    $0x3,%r11
    1c1d:	66 48 0f 7e c3       	movq   %xmm0,%rbx
    1c22:	49 31 d2             	xor    %rdx,%r10
    1c25:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    1c2a:	48 8b 48 48          	mov    0x48(%rax),%rcx
    1c2e:	48 c1 cb 15          	ror    $0x15,%rbx
    1c32:	66 0f ef fb          	pxor   %xmm3,%xmm7
    1c36:	66 0f 6c e9          	punpcklqdq %xmm1,%xmm5
    1c3a:	66 4d 0f 6e fb       	movq   %r11,%xmm15
    1c3f:	66 41 0f ef dd       	pxor   %xmm13,%xmm3
    1c44:	49 c1 c0 1c          	rol    $0x1c,%r8
    1c48:	48 31 d1             	xor    %rdx,%rcx
    1c4b:	66 4c 0f 6e eb       	movq   %rbx,%xmm13
    1c50:	48 8b 58 70          	mov    0x70(%rax),%rbx
    1c54:	66 4d 0f 7e f1       	movq   %xmm14,%r9
    1c59:	48 c1 c1 14          	rol    $0x14,%rcx
    1c5d:	49 d1 c1             	rol    %r9
    1c60:	0f 11 54 24 28       	movups %xmm2,0x28(%rsp)
    1c65:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    1c6a:	48 31 d3             	xor    %rdx,%rbx
    1c6d:	49 c1 c2 1b          	rol    $0x1b,%r10
    1c71:	0f 11 6c 24 38       	movups %xmm5,0x38(%rsp)
    1c76:	66 41 0f 6c cf       	punpcklqdq %xmm15,%xmm1
    1c7b:	0f 11 48 48          	movups %xmm1,0x48(%rax)
    1c7f:	66 49 0f 7e cb       	movq   %xmm1,%r11
    1c84:	41 0f 12 c8          	movhlps %xmm8,%xmm1
    1c88:	4c 8b 70 50          	mov    0x50(%rax),%r14
    1c8c:	66 48 0f 7e c9       	movq   %xmm1,%rcx
    1c91:	4c 89 5c 24 48       	mov    %r11,0x48(%rsp)
    1c96:	48 c1 c1 0a          	rol    $0xa,%rcx
    1c9a:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    1c9f:	66 41 0f 6c cd       	punpcklqdq %xmm13,%xmm1
    1ca4:	0f 11 48 58          	movups %xmm1,0x58(%rax)
    1ca8:	0f 12 c8             	movhlps %xmm0,%xmm1
    1cab:	4c 8b 68 60          	mov    0x60(%rax),%r13
    1caf:	66 48 0f 7e c9       	movq   %xmm1,%rcx
    1cb4:	48 c1 c1 19          	rol    $0x19,%rcx
    1cb8:	48 c1 cb 19          	ror    $0x19,%rbx
    1cbc:	66 48 0f 6e cb       	movq   %rbx,%xmm1
    1cc1:	66 48 0f 7e f3       	movq   %xmm6,%rbx
    1cc6:	66 0f 73 de 08       	psrldq $0x8,%xmm6
    1ccb:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    1cd0:	66 48 0f 7e f1       	movq   %xmm6,%rcx
    1cd5:	48 c1 cb 17          	ror    $0x17,%rbx
    1cd9:	48 c1 c9 13          	ror    $0x13,%rcx
    1cdd:	66 0f 6c c1          	punpcklqdq %xmm1,%xmm0
    1ce1:	66 48 0f 6e f3       	movq   %rbx,%xmm6
    1ce6:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    1ceb:	66 48 0f 7e f9       	movq   %xmm7,%rcx
    1cf0:	66 0f 73 df 08       	psrldq $0x8,%xmm7
    1cf5:	0f 11 40 68          	movups %xmm0,0x68(%rax)
    1cf9:	48 c1 c1 0f          	rol    $0xf,%rcx
    1cfd:	66 0f 6c f1          	punpcklqdq %xmm1,%xmm6
    1d01:	66 48 0f 7e e3       	movq   %xmm4,%rbx
    1d06:	48 8b 68 70          	mov    0x70(%rax),%rbp
    1d0a:	66 48 0f 6e c9       	movq   %rcx,%xmm1
    1d0f:	66 48 0f 7e f9       	movq   %xmm7,%rcx
    1d14:	48 c1 c3 12          	rol    $0x12,%rbx
    1d18:	66 0f 73 dc 08       	psrldq $0x8,%xmm4
    1d1d:	48 c1 c1 15          	rol    $0x15,%rcx
    1d21:	0f 11 74 24 78       	movups %xmm6,0x78(%rsp)
    1d26:	66 48 0f 6e f9       	movq   %rcx,%xmm7
    1d2b:	48 8b 88 98 00 00 00 	mov    0x98(%rax),%rcx
    1d32:	48 89 6c 24 70       	mov    %rbp,0x70(%rsp)
    1d37:	66 0f 6c cf          	punpcklqdq %xmm7,%xmm1
    1d3b:	66 48 0f 6e fb       	movq   %rbx,%xmm7
    1d40:	66 48 0f 7e db       	movq   %xmm3,%rbx
    1d45:	66 0f 73 db 08       	psrldq $0x8,%xmm3
    1d4a:	48 31 d1             	xor    %rdx,%rcx
    1d4d:	48 c1 cb 03          	ror    $0x3,%rbx
    1d51:	48 33 90 c0 00 00 00 	xor    0xc0(%rax),%rdx
    1d58:	0f 11 8c 24 88 00 00 	movups %xmm1,0x88(%rsp)
    1d5f:	00 
    1d60:	48 c1 c1 08          	rol    $0x8,%rcx
    1d64:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    1d69:	66 48 0f 7e e1       	movq   %xmm4,%rcx
    1d6e:	66 48 0f 6e e3       	movq   %rbx,%xmm4
    1d73:	66 0f 6c c7          	punpcklqdq %xmm7,%xmm0
    1d77:	48 c1 c1 02          	rol    $0x2,%rcx
    1d7b:	66 48 0f 7e f3       	movq   %xmm6,%rbx
    1d80:	66 0f 6f f8          	movdqa %xmm0,%xmm7
    1d84:	0f 11 80 98 00 00 00 	movups %xmm0,0x98(%rax)
    1d8b:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    1d90:	66 48 0f 7e d9       	movq   %xmm3,%rcx
    1d95:	66 0f 6c c4          	punpcklqdq %xmm4,%xmm0
    1d99:	48 c1 c9 08          	ror    $0x8,%rcx
    1d9d:	f3 0f 6f 60 50       	movdqu 0x50(%rax),%xmm4
    1da2:	66 0f d6 bc 24 98 00 	movq   %xmm7,0x98(%rsp)
    1da9:	00 00 
    1dab:	0f 11 80 a8 00 00 00 	movups %xmm0,0xa8(%rax)
    1db2:	66 48 0f 6e c1       	movq   %rcx,%xmm0
    1db7:	48 89 d1             	mov    %rdx,%rcx
    1dba:	f3 0f 6f b0 a0 00 00 	movdqu 0xa0(%rax),%xmm6
    1dc1:	00 
    1dc2:	48 c1 c1 0e          	rol    $0xe,%rcx
    1dc6:	0f 29 64 24 50       	movaps %xmm4,0x50(%rsp)
    1dcb:	f3 0f 6f 60 60       	movdqu 0x60(%rax),%xmm4
    1dd0:	4c 8b a0 b0 00 00 00 	mov    0xb0(%rax),%r12
    1dd7:	66 48 0f 6e d9       	movq   %rcx,%xmm3
    1ddc:	0f 29 b4 24 a0 00 00 	movaps %xmm6,0xa0(%rsp)
    1de3:	00 
    1de4:	48 8b 88 a0 00 00 00 	mov    0xa0(%rax),%rcx
    1deb:	66 0f 6c c3          	punpcklqdq %xmm3,%xmm0
    1def:	0f 29 64 24 60       	movaps %xmm4,0x60(%rsp)
    1df4:	0f 11 80 b8 00 00 00 	movups %xmm0,0xb8(%rax)
    1dfb:	f3 0f 6f b0 b0 00 00 	movdqu 0xb0(%rax),%xmm6
    1e02:	00 
    1e03:	0f 29 b4 24 b0 00 00 	movaps %xmm6,0xb0(%rsp)
    1e0a:	00 
    1e0b:	48 8b 90 c0 00 00 00 	mov    0xc0(%rax),%rdx
    1e12:	4c 89 40 28          	mov    %r8,0x28(%rax)
    1e16:	4c 8b 44 24 40       	mov    0x40(%rsp),%r8
    1e1b:	48 89 48 70          	mov    %rcx,0x70(%rax)
    1e1f:	48 8b 4c 24 30       	mov    0x30(%rsp),%rcx
    1e24:	4c 89 48 50          	mov    %r9,0x50(%rax)
    1e28:	4c 8b 4c 24 68       	mov    0x68(%rsp),%r9
    1e2d:	48 89 48 08          	mov    %rcx,0x8(%rax)
    1e31:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
    1e36:	48 89 50 20          	mov    %rdx,0x20(%rax)
    1e3a:	f3 44 0f 6f 10       	movdqu (%rax),%xmm10
    1e3f:	48 89 94 24 c0 00 00 	mov    %rdx,0xc0(%rsp)
    1e46:	00 
    1e47:	4c 89 c2             	mov    %r8,%rdx
    1e4a:	4c 89 48 60          	mov    %r9,0x60(%rax)
    1e4e:	4c 8b 8c 24 90 00 00 	mov    0x90(%rsp),%r9
    1e55:	00 
    1e56:	48 f7 d2             	not    %rdx
    1e59:	66 41 0f 6f e2       	movdqa %xmm10,%xmm4
    1e5e:	48 89 88 88 00 00 00 	mov    %rcx,0x88(%rax)
    1e65:	48 21 ea             	and    %rbp,%rdx
    1e68:	48 8b 8c 24 80 00 00 	mov    0x80(%rsp),%rcx
    1e6f:	00 
    1e70:	4c 89 48 18          	mov    %r9,0x18(%rax)
    1e74:	48 31 fa             	xor    %rdi,%rdx
    1e77:	4c 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%r9
    1e7e:	00 
    1e7f:	48 89 48 40          	mov    %rcx,0x40(%rax)
    1e83:	48 8b 8c 24 a8 00 00 	mov    0xa8(%rsp),%rcx
    1e8a:	00 
    1e8b:	4c 89 68 10          	mov    %r13,0x10(%rax)
    1e8f:	f3 44 0f 6f 58 10    	movdqu 0x10(%rax),%xmm11
    1e95:	66 0f d6 90 80 00 00 	movq   %xmm2,0x80(%rax)
    1e9c:	00 
    1e9d:	66 0f 76 d2          	pcmpeqd %xmm2,%xmm2
    1ea1:	66 0f d6 68 58       	movq   %xmm5,0x58(%rax)
    1ea6:	f3 0f 6f 68 20       	movdqu 0x20(%rax),%xmm5
    1eab:	66 0f ef e2          	pxor   %xmm2,%xmm4
    1eaf:	66 45 0f 6f cb       	movdqa %xmm11,%xmm9
    1eb4:	66 0f d6 78 68       	movq   %xmm7,0x68(%rax)
    1eb9:	66 44 0f ef ca       	pxor   %xmm2,%xmm9
    1ebe:	66 0f 6f dc          	movdqa %xmm4,%xmm3
    1ec2:	4c 89 70 38          	mov    %r14,0x38(%rax)
    1ec6:	66 44 0f 6f c5       	movdqa %xmm5,%xmm8
    1ecb:	66 44 0f 6f e5       	movdqa %xmm5,%xmm12
    1ed0:	66 41 0f c6 d9 01    	shufpd $0x1,%xmm9,%xmm3
    1ed6:	4c 89 60 48          	mov    %r12,0x48(%rax)
    1eda:	66 44 0f ef c2       	pxor   %xmm2,%xmm8
    1edf:	66 41 0f db db       	pand   %xmm11,%xmm3
    1ee4:	66 45 0f 6c e2       	punpcklqdq %xmm10,%xmm12
    1ee9:	4c 89 50 78          	mov    %r10,0x78(%rax)
    1eed:	66 41 0f ef da       	pxor   %xmm10,%xmm3
    1ef2:	66 45 0f c6 c8 01    	shufpd $0x1,%xmm8,%xmm9
    1ef8:	66 45 0f db cc       	pand   %xmm12,%xmm9
    1efd:	66 0f d6 88 90 00 00 	movq   %xmm1,0x90(%rax)
    1f04:	00 
    1f05:	66 45 0f ef cb       	pxor   %xmm11,%xmm9
    1f0a:	4c 89 88 98 00 00 00 	mov    %r9,0x98(%rax)
    1f11:	4c 89 58 30          	mov    %r11,0x30(%rax)
    1f15:	f3 0f 6f 70 30       	movdqu 0x30(%rax),%xmm6
    1f1a:	f3 0f 6f 78 40       	movdqu 0x40(%rax),%xmm7
    1f1f:	48 89 90 a0 00 00 00 	mov    %rdx,0xa0(%rax)
    1f26:	48 89 ea             	mov    %rbp,%rdx
    1f29:	48 f7 d2             	not    %rdx
    1f2c:	66 0f 6f ce          	movdqa %xmm6,%xmm1
    1f30:	66 44 0f 6d d6       	punpckhqdq %xmm6,%xmm10
    1f35:	0f 11 18             	movups %xmm3,(%rax)
    1f38:	66 0f 6f c7          	movdqa %xmm7,%xmm0
    1f3c:	48 21 da             	and    %rbx,%rdx
    1f3f:	66 0f ef ca          	pxor   %xmm2,%xmm1
    1f43:	44 0f 11 48 10       	movups %xmm9,0x10(%rax)
    1f48:	66 0f ef c2          	pxor   %xmm2,%xmm0
    1f4c:	4c 31 c2             	xor    %r8,%rdx
    1f4f:	66 0f 6c e1          	punpcklqdq %xmm1,%xmm4
    1f53:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)
    1f5a:	66 0f c6 c8 01       	shufpd $0x1,%xmm0,%xmm1
    1f5f:	48 89 da             	mov    %rbx,%rdx
    1f62:	66 0f db cf          	pand   %xmm7,%xmm1
    1f66:	66 0f ef ce          	pxor   %xmm6,%xmm1
    1f6a:	48 f7 d2             	not    %rdx
    1f6d:	66 41 0f db e2       	pand   %xmm10,%xmm4
    1f72:	f3 44 0f 6f 50 60    	movdqu 0x60(%rax),%xmm10
    1f78:	48 21 ca             	and    %rcx,%rdx
    1f7b:	0f 11 48 30          	movups %xmm1,0x30(%rax)
    1f7f:	f3 0f 6f 48 50       	movdqu 0x50(%rax),%xmm1
    1f84:	66 0f ef e5          	pxor   %xmm5,%xmm4
    1f88:	48 31 ea             	xor    %rbp,%rdx
    1f8b:	66 41 0f 6d c0       	punpckhqdq %xmm8,%xmm0
    1f90:	66 0f c6 ee 01       	shufpd $0x1,%xmm6,%xmm5
    1f95:	66 45 0f 6f da       	movdqa %xmm10,%xmm11
    1f9a:	66 44 0f 6f c9       	movdqa %xmm1,%xmm9
    1f9f:	66 0f db c5          	pand   %xmm5,%xmm0
    1fa3:	48 89 90 b0 00 00 00 	mov    %rdx,0xb0(%rax)
    1faa:	48 89 ca             	mov    %rcx,%rdx
    1fad:	66 44 0f ef ca       	pxor   %xmm2,%xmm9
    1fb2:	48 f7 d2             	not    %rdx
    1fb5:	66 0f ef c7          	pxor   %xmm7,%xmm0
    1fb9:	0f 11 60 20          	movups %xmm4,0x20(%rax)
    1fbd:	f3 0f 6f b0 80 00 00 	movdqu 0x80(%rax),%xmm6
    1fc4:	00 
    1fc5:	66 44 0f ef da       	pxor   %xmm2,%xmm11
    1fca:	66 41 0f 6f e9       	movdqa %xmm9,%xmm5
    1fcf:	48 21 fa             	and    %rdi,%rdx
    1fd2:	48 31 da             	xor    %rbx,%rdx
    1fd5:	66 41 0f c6 eb 01    	shufpd $0x1,%xmm11,%xmm5
    1fdb:	0f 11 40 40          	movups %xmm0,0x40(%rax)
    1fdf:	66 41 0f db ea       	pand   %xmm10,%xmm5
    1fe4:	f3 0f 6f 40 70       	movdqu 0x70(%rax),%xmm0
    1fe9:	48 f7 d7             	not    %rdi
    1fec:	66 0f ef e9          	pxor   %xmm1,%xmm5
    1ff0:	66 0f 6f e6          	movdqa %xmm6,%xmm4
    1ff4:	f3 0f 6f b8 90 00 00 	movdqu 0x90(%rax),%xmm7
    1ffb:	00 
    1ffc:	48 89 90 b8 00 00 00 	mov    %rdx,0xb8(%rax)
    2003:	48 89 fa             	mov    %rdi,%rdx
    2006:	66 0f ef e2          	pxor   %xmm2,%xmm4
    200a:	66 44 0f 6f c0       	movdqa %xmm0,%xmm8
    200f:	0f 11 68 50          	movups %xmm5,0x50(%rax)
    2013:	4c 21 c2             	and    %r8,%rdx
    2016:	66 0f 6f e8          	movdqa %xmm0,%xmm5
    201a:	66 44 0f ef c2       	pxor   %xmm2,%xmm8
    201f:	66 0f 6c e9          	punpcklqdq %xmm1,%xmm5
    2023:	66 0f ef d7          	pxor   %xmm7,%xmm2
    2027:	48 31 ca             	xor    %rcx,%rdx
    202a:	66 44 0f 6c cc       	punpcklqdq %xmm4,%xmm9
    202f:	66 0f 6d ce          	punpckhqdq %xmm6,%xmm1
    2033:	48 8d 0d a6 19 00 00 	lea    0x19a6(%rip),%rcx        # 39e0 <KeccakRoundConstants>
    203a:	66 0f c6 e2 01       	shufpd $0x1,%xmm2,%xmm4
    203f:	48 89 90 c0 00 00 00 	mov    %rdx,0xc0(%rax)
    2046:	66 41 0f db c9       	pand   %xmm9,%xmm1
    204b:	66 41 0f 6d d0       	punpckhqdq %xmm8,%xmm2
    2050:	66 48 0f 7e da       	movq   %xmm3,%rdx
    2055:	48 33 14 f1          	xor    (%rcx,%rsi,8),%rdx
    2059:	66 0f ef c8          	pxor   %xmm0,%xmm1
    205d:	66 0f db e7          	pand   %xmm7,%xmm4
    2061:	66 45 0f c6 d8 01    	shufpd $0x1,%xmm8,%xmm11
    2067:	66 0f c6 c6 01       	shufpd $0x1,%xmm6,%xmm0
    206c:	66 41 0f db eb       	pand   %xmm11,%xmm5
    2071:	66 0f db c2          	pand   %xmm2,%xmm0
    2075:	48 89 10             	mov    %rdx,(%rax)
    2078:	66 41 0f ef ea       	pxor   %xmm10,%xmm5
    207d:	66 0f ef e6          	pxor   %xmm6,%xmm4
    2081:	66 0f ef c7          	pxor   %xmm7,%xmm0
    2085:	0f 11 48 70          	movups %xmm1,0x70(%rax)
    2089:	0f 11 68 60          	movups %xmm5,0x60(%rax)
    208d:	0f 11 a0 80 00 00 00 	movups %xmm4,0x80(%rax)
    2094:	0f 11 80 90 00 00 00 	movups %xmm0,0x90(%rax)
    209b:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    20a2:	00 
    20a3:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    20aa:	00 00 
    20ac:	75 10                	jne    20be <KeccakP1600Round+0x66e>
    20ae:	48 81 c4 d0 00 00 00 	add    $0xd0,%rsp
    20b5:	5b                   	pop    %rbx
    20b6:	5d                   	pop    %rbp
    20b7:	41 5c                	pop    %r12
    20b9:	41 5d                	pop    %r13
    20bb:	41 5e                	pop    %r14
    20bd:	c3                   	ret    
    20be:	e8 0d f0 ff ff       	call   10d0 <__stack_chk_fail@plt>
    20c3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    20ca:	00 00 00 00 
    20ce:	66 90                	xchg   %ax,%ax

00000000000020d0 <KeccakP1600OnWords>:
    20d0:	f3 0f 1e fa          	endbr64 
    20d4:	55                   	push   %rbp
    20d5:	53                   	push   %rbx
    20d6:	bb 18 00 00 00       	mov    $0x18,%ebx
    20db:	29 f3                	sub    %esi,%ebx
    20dd:	48 83 ec 08          	sub    $0x8,%rsp
    20e1:	83 fb 17             	cmp    $0x17,%ebx
    20e4:	77 1c                	ja     2102 <KeccakP1600OnWords+0x32>
    20e6:	48 89 fd             	mov    %rdi,%rbp
    20e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    20f0:	89 de                	mov    %ebx,%esi
    20f2:	48 89 ef             	mov    %rbp,%rdi
    20f5:	83 c3 01             	add    $0x1,%ebx
    20f8:	e8 53 f9 ff ff       	call   1a50 <KeccakP1600Round>
    20fd:	83 fb 18             	cmp    $0x18,%ebx
    2100:	75 ee                	jne    20f0 <KeccakP1600OnWords+0x20>
    2102:	48 83 c4 08          	add    $0x8,%rsp
    2106:	5b                   	pop    %rbx
    2107:	5d                   	pop    %rbp
    2108:	c3                   	ret    
    2109:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002110 <KeccakP1600_Permute_Nrounds>:
    2110:	f3 0f 1e fa          	endbr64 
    2114:	55                   	push   %rbp
    2115:	53                   	push   %rbx
    2116:	bb 18 00 00 00       	mov    $0x18,%ebx
    211b:	29 f3                	sub    %esi,%ebx
    211d:	48 83 ec 08          	sub    $0x8,%rsp
    2121:	83 fb 17             	cmp    $0x17,%ebx
    2124:	77 1c                	ja     2142 <KeccakP1600_Permute_Nrounds+0x32>
    2126:	48 89 fd             	mov    %rdi,%rbp
    2129:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2130:	89 de                	mov    %ebx,%esi
    2132:	48 89 ef             	mov    %rbp,%rdi
    2135:	83 c3 01             	add    $0x1,%ebx
    2138:	e8 13 f9 ff ff       	call   1a50 <KeccakP1600Round>
    213d:	83 fb 18             	cmp    $0x18,%ebx
    2140:	75 ee                	jne    2130 <KeccakP1600_Permute_Nrounds+0x20>
    2142:	48 83 c4 08          	add    $0x8,%rsp
    2146:	5b                   	pop    %rbx
    2147:	5d                   	pop    %rbp
    2148:	c3                   	ret    
    2149:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002150 <KeccakP1600_Permute_12rounds>:
    2150:	f3 0f 1e fa          	endbr64 
    2154:	55                   	push   %rbp
    2155:	48 89 fd             	mov    %rdi,%rbp
    2158:	53                   	push   %rbx
    2159:	bb 0c 00 00 00       	mov    $0xc,%ebx
    215e:	48 83 ec 08          	sub    $0x8,%rsp
    2162:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2168:	89 de                	mov    %ebx,%esi
    216a:	48 89 ef             	mov    %rbp,%rdi
    216d:	83 c3 01             	add    $0x1,%ebx
    2170:	e8 db f8 ff ff       	call   1a50 <KeccakP1600Round>
    2175:	83 fb 18             	cmp    $0x18,%ebx
    2178:	75 ee                	jne    2168 <KeccakP1600_Permute_12rounds+0x18>
    217a:	48 83 c4 08          	add    $0x8,%rsp
    217e:	5b                   	pop    %rbx
    217f:	5d                   	pop    %rbp
    2180:	c3                   	ret    
    2181:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    2188:	00 00 00 00 
    218c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002190 <KeccakP1600_Permute_24rounds>:
    2190:	f3 0f 1e fa          	endbr64 
    2194:	55                   	push   %rbp
    2195:	48 89 fd             	mov    %rdi,%rbp
    2198:	53                   	push   %rbx
    2199:	31 db                	xor    %ebx,%ebx
    219b:	48 83 ec 08          	sub    $0x8,%rsp
    219f:	90                   	nop
    21a0:	89 de                	mov    %ebx,%esi
    21a2:	48 89 ef             	mov    %rbp,%rdi
    21a5:	83 c3 01             	add    $0x1,%ebx
    21a8:	e8 a3 f8 ff ff       	call   1a50 <KeccakP1600Round>
    21ad:	83 fb 18             	cmp    $0x18,%ebx
    21b0:	75 ee                	jne    21a0 <KeccakP1600_Permute_24rounds+0x10>
    21b2:	48 83 c4 08          	add    $0x8,%rsp
    21b6:	5b                   	pop    %rbx
    21b7:	5d                   	pop    %rbp
    21b8:	c3                   	ret    
    21b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000021c0 <KeccakP1600_ExtractBytes>:
    21c0:	f3 0f 1e fa          	endbr64 
    21c4:	48 83 ec 08          	sub    $0x8,%rsp
    21c8:	81 fa c7 00 00 00    	cmp    $0xc7,%edx
    21ce:	77 25                	ja     21f5 <KeccakP1600_ExtractBytes+0x35>
    21d0:	8d 04 0a             	lea    (%rdx,%rcx,1),%eax
    21d3:	3d c8 00 00 00       	cmp    $0xc8,%eax
    21d8:	77 3a                	ja     2214 <KeccakP1600_ExtractBytes+0x54>
    21da:	49 89 f1             	mov    %rsi,%r9
    21dd:	89 d2                	mov    %edx,%edx
    21df:	41 89 c8             	mov    %ecx,%r8d
    21e2:	48 83 c4 08          	add    $0x8,%rsp
    21e6:	48 8d 34 17          	lea    (%rdi,%rdx,1),%rsi
    21ea:	4c 89 c2             	mov    %r8,%rdx
    21ed:	4c 89 cf             	mov    %r9,%rdi
    21f0:	e9 0b ef ff ff       	jmp    1100 <memcpy@plt>
    21f5:	48 8d 0d c4 16 00 00 	lea    0x16c4(%rip),%rcx        # 38c0 <__PRETTY_FUNCTION__.1>
    21fc:	ba da 00 00 00       	mov    $0xda,%edx
    2201:	48 8d 35 11 16 00 00 	lea    0x1611(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    2208:	48 8d 3d 23 16 00 00 	lea    0x1623(%rip),%rdi        # 3832 <_IO_stdin_used+0x832>
    220f:	e8 cc ee ff ff       	call   10e0 <__assert_fail@plt>
    2214:	48 8d 0d a5 16 00 00 	lea    0x16a5(%rip),%rcx        # 38c0 <__PRETTY_FUNCTION__.1>
    221b:	ba db 00 00 00       	mov    $0xdb,%edx
    2220:	48 8d 35 f2 15 00 00 	lea    0x15f2(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    2227:	48 8d 3d 11 16 00 00 	lea    0x1611(%rip),%rdi        # 383f <_IO_stdin_used+0x83f>
    222e:	e8 ad ee ff ff       	call   10e0 <__assert_fail@plt>
    2233:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    223a:	00 00 00 00 
    223e:	66 90                	xchg   %ax,%ax

0000000000002240 <KeccakP1600_ExtractAndAddBytes>:
    2240:	f3 0f 1e fa          	endbr64 
    2244:	48 83 ec 08          	sub    $0x8,%rsp
    2248:	81 f9 c7 00 00 00    	cmp    $0xc7,%ecx
    224e:	77 3d                	ja     228d <KeccakP1600_ExtractAndAddBytes+0x4d>
    2250:	42 8d 04 01          	lea    (%rcx,%r8,1),%eax
    2254:	3d c8 00 00 00       	cmp    $0xc8,%eax
    2259:	77 51                	ja     22ac <KeccakP1600_ExtractAndAddBytes+0x6c>
    225b:	49 89 f1             	mov    %rsi,%r9
    225e:	45 89 c2             	mov    %r8d,%r10d
    2261:	31 c0                	xor    %eax,%eax
    2263:	45 85 c0             	test   %r8d,%r8d
    2266:	74 20                	je     2288 <KeccakP1600_ExtractAndAddBytes+0x48>
    2268:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    226f:	00 
    2270:	8d 34 01             	lea    (%rcx,%rax,1),%esi
    2273:	0f b6 34 37          	movzbl (%rdi,%rsi,1),%esi
    2277:	41 32 34 01          	xor    (%r9,%rax,1),%sil
    227b:	40 88 34 02          	mov    %sil,(%rdx,%rax,1)
    227f:	48 83 c0 01          	add    $0x1,%rax
    2283:	49 39 c2             	cmp    %rax,%r10
    2286:	75 e8                	jne    2270 <KeccakP1600_ExtractAndAddBytes+0x30>
    2288:	48 83 c4 08          	add    $0x8,%rsp
    228c:	c3                   	ret    
    228d:	48 8d 0d 0c 16 00 00 	lea    0x160c(%rip),%rcx        # 38a0 <__PRETTY_FUNCTION__.0>
    2294:	ba e5 00 00 00       	mov    $0xe5,%edx
    2299:	48 8d 35 79 15 00 00 	lea    0x1579(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    22a0:	48 8d 3d 8b 15 00 00 	lea    0x158b(%rip),%rdi        # 3832 <_IO_stdin_used+0x832>
    22a7:	e8 34 ee ff ff       	call   10e0 <__assert_fail@plt>
    22ac:	48 8d 0d ed 15 00 00 	lea    0x15ed(%rip),%rcx        # 38a0 <__PRETTY_FUNCTION__.0>
    22b3:	ba e6 00 00 00       	mov    $0xe6,%edx
    22b8:	48 8d 35 5a 15 00 00 	lea    0x155a(%rip),%rsi        # 3819 <_IO_stdin_used+0x819>
    22bf:	48 8d 3d 79 15 00 00 	lea    0x1579(%rip),%rdi        # 383f <_IO_stdin_used+0x83f>
    22c6:	e8 15 ee ff ff       	call   10e0 <__assert_fail@plt>
    22cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000022d0 <KeccakP1600_DisplayRoundConstants>:
    22d0:	f3 0f 1e fa          	endbr64 
    22d4:	41 57                	push   %r15
    22d6:	49 89 ff             	mov    %rdi,%r15
    22d9:	41 56                	push   %r14
    22db:	4c 8d 35 83 15 00 00 	lea    0x1583(%rip),%r14        # 3865 <_IO_stdin_used+0x865>
    22e2:	41 55                	push   %r13
    22e4:	4c 8d 2d f5 16 00 00 	lea    0x16f5(%rip),%r13        # 39e0 <KeccakRoundConstants>
    22eb:	41 54                	push   %r12
    22ed:	4c 8d 25 83 15 00 00 	lea    0x1583(%rip),%r12        # 3877 <_IO_stdin_used+0x877>
    22f4:	55                   	push   %rbp
    22f5:	53                   	push   %rbx
    22f6:	31 db                	xor    %ebx,%ebx
    22f8:	48 83 ec 08          	sub    $0x8,%rsp
    22fc:	0f 1f 40 00          	nopl   0x0(%rax)
    2300:	89 d9                	mov    %ebx,%ecx
    2302:	4c 89 f2             	mov    %r14,%rdx
    2305:	be 01 00 00 00       	mov    $0x1,%esi
    230a:	4c 89 ff             	mov    %r15,%rdi
    230d:	31 c0                	xor    %eax,%eax
    230f:	e8 1c ee ff ff       	call   1130 <__fprintf_chk@plt>
    2314:	49 8b 6c dd 00       	mov    0x0(%r13,%rbx,8),%rbp
    2319:	4c 89 e2             	mov    %r12,%rdx
    231c:	4c 89 ff             	mov    %r15,%rdi
    231f:	be 01 00 00 00       	mov    $0x1,%esi
    2324:	48 83 c3 01          	add    $0x1,%rbx
    2328:	48 89 e8             	mov    %rbp,%rax
    232b:	48 c1 e8 20          	shr    $0x20,%rax
    232f:	48 89 c1             	mov    %rax,%rcx
    2332:	31 c0                	xor    %eax,%eax
    2334:	e8 f7 ed ff ff       	call   1130 <__fprintf_chk@plt>
    2339:	89 e9                	mov    %ebp,%ecx
    233b:	4c 89 e2             	mov    %r12,%rdx
    233e:	be 01 00 00 00       	mov    $0x1,%esi
    2343:	4c 89 ff             	mov    %r15,%rdi
    2346:	31 c0                	xor    %eax,%eax
    2348:	e8 e3 ed ff ff       	call   1130 <__fprintf_chk@plt>
    234d:	4c 89 fe             	mov    %r15,%rsi
    2350:	bf 0a 00 00 00       	mov    $0xa,%edi
    2355:	e8 96 ed ff ff       	call   10f0 <fputc@plt>
    235a:	48 83 fb 18          	cmp    $0x18,%rbx
    235e:	75 a0                	jne    2300 <KeccakP1600_DisplayRoundConstants+0x30>
    2360:	48 83 c4 08          	add    $0x8,%rsp
    2364:	4c 89 fe             	mov    %r15,%rsi
    2367:	bf 0a 00 00 00       	mov    $0xa,%edi
    236c:	5b                   	pop    %rbx
    236d:	5d                   	pop    %rbp
    236e:	41 5c                	pop    %r12
    2370:	41 5d                	pop    %r13
    2372:	41 5e                	pop    %r14
    2374:	41 5f                	pop    %r15
    2376:	e9 75 ed ff ff       	jmp    10f0 <fputc@plt>
    237b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002380 <KeccakP1600_DisplayRhoOffsets>:
    2380:	f3 0f 1e fa          	endbr64 
    2384:	41 57                	push   %r15
    2386:	4c 8d 3d ef 14 00 00 	lea    0x14ef(%rip),%r15        # 387c <_IO_stdin_used+0x87c>
    238d:	41 56                	push   %r14
    238f:	45 31 f6             	xor    %r14d,%r14d
    2392:	41 55                	push   %r13
    2394:	4c 8d 2d f6 14 00 00 	lea    0x14f6(%rip),%r13        # 3891 <_IO_stdin_used+0x891>
    239b:	41 54                	push   %r12
    239d:	55                   	push   %rbp
    239e:	48 89 fd             	mov    %rdi,%rbp
    23a1:	53                   	push   %rbx
    23a2:	48 83 ec 08          	sub    $0x8,%rsp
    23a6:	47 8d 24 b6          	lea    (%r14,%r14,4),%r12d
    23aa:	31 db                	xor    %ebx,%ebx
    23ac:	45 89 f0             	mov    %r14d,%r8d
    23af:	89 d9                	mov    %ebx,%ecx
    23b1:	4c 89 fa             	mov    %r15,%rdx
    23b4:	be 01 00 00 00       	mov    $0x1,%esi
    23b9:	48 89 ef             	mov    %rbp,%rdi
    23bc:	31 c0                	xor    %eax,%eax
    23be:	e8 6d ed ff ff       	call   1130 <__fprintf_chk@plt>
    23c3:	41 8d 04 1c          	lea    (%r12,%rbx,1),%eax
    23c7:	be 01 00 00 00       	mov    $0x1,%esi
    23cc:	48 89 ef             	mov    %rbp,%rdi
    23cf:	48 8d 15 8a 15 00 00 	lea    0x158a(%rip),%rdx        # 3960 <KeccakRhoOffsets>
    23d6:	83 c3 01             	add    $0x1,%ebx
    23d9:	8b 0c 82             	mov    (%rdx,%rax,4),%ecx
    23dc:	4c 89 ea             	mov    %r13,%rdx
    23df:	31 c0                	xor    %eax,%eax
    23e1:	e8 4a ed ff ff       	call   1130 <__fprintf_chk@plt>
    23e6:	48 89 ee             	mov    %rbp,%rsi
    23e9:	bf 0a 00 00 00       	mov    $0xa,%edi
    23ee:	e8 fd ec ff ff       	call   10f0 <fputc@plt>
    23f3:	83 fb 05             	cmp    $0x5,%ebx
    23f6:	75 b4                	jne    23ac <KeccakP1600_DisplayRhoOffsets+0x2c>
    23f8:	41 83 c6 01          	add    $0x1,%r14d
    23fc:	41 83 fe 05          	cmp    $0x5,%r14d
    2400:	75 a4                	jne    23a6 <KeccakP1600_DisplayRhoOffsets+0x26>
    2402:	48 83 c4 08          	add    $0x8,%rsp
    2406:	48 89 ee             	mov    %rbp,%rsi
    2409:	bf 0a 00 00 00       	mov    $0xa,%edi
    240e:	5b                   	pop    %rbx
    240f:	5d                   	pop    %rbp
    2410:	41 5c                	pop    %r12
    2412:	41 5d                	pop    %r13
    2414:	41 5e                	pop    %r14
    2416:	41 5f                	pop    %r15
    2418:	e9 d3 ec ff ff       	jmp    10f0 <fputc@plt>

Disassembly of section .fini:

0000000000002420 <_fini>:
    2420:	f3 0f 1e fa          	endbr64 
    2424:	48 83 ec 08          	sub    $0x8,%rsp
    2428:	48 83 c4 08          	add    $0x8,%rsp
    242c:	c3                   	ret    
