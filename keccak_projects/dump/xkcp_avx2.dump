
test_avx2_xkcp:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 4f 00 00 	mov    0x4fd9(%rip),%rax        # 5fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <putchar@plt-0x10>:
    1020:	ff 35 82 4f 00 00    	push   0x4f82(%rip)        # 5fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 84 4f 00 00    	jmp    *0x4f84(%rip)        # 5fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <putchar@plt>:
    1030:	ff 25 82 4f 00 00    	jmp    *0x4f82(%rip)        # 5fb8 <putchar@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <__stack_chk_fail@plt>:
    1040:	ff 25 7a 4f 00 00    	jmp    *0x4f7a(%rip)        # 5fc0 <__stack_chk_fail@GLIBC_2.4>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <__isoc99_sscanf@plt>:
    1050:	ff 25 72 4f 00 00    	jmp    *0x4f72(%rip)        # 5fc8 <__isoc99_sscanf@GLIBC_2.7>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__printf_chk@plt>:
    1060:	ff 25 6a 4f 00 00    	jmp    *0x4f6a(%rip)        # 5fd0 <__printf_chk@GLIBC_2.3.4>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	ff 25 82 4f 00 00    	jmp    *0x4f82(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001080 <main>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	48 83 ec 08          	sub    $0x8,%rsp
    1088:	31 c0                	xor    %eax,%eax
    108a:	e8 d1 02 00 00       	call   1360 <sha3_tests>
    108f:	31 c0                	xor    %eax,%eax
    1091:	48 83 c4 08          	add    $0x8,%rsp
    1095:	c3                   	ret    
    1096:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    109d:	00 00 00 

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	45 31 c0             	xor    %r8d,%r8d
    10b6:	31 c9                	xor    %ecx,%ecx
    10b8:	48 8d 3d c1 ff ff ff 	lea    -0x3f(%rip),%rdi        # 1080 <main>
    10bf:	ff 15 13 4f 00 00    	call   *0x4f13(%rip)        # 5fd8 <__libc_start_main@GLIBC_2.34>
    10c5:	f4                   	hlt    
    10c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10cd:	00 00 00 

00000000000010d0 <deregister_tm_clones>:
    10d0:	48 8d 3d 41 51 00 00 	lea    0x5141(%rip),%rdi        # 6218 <__TMC_END__>
    10d7:	48 8d 05 3a 51 00 00 	lea    0x513a(%rip),%rax        # 6218 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <deregister_tm_clones+0x28>
    10e3:	48 8b 05 f6 4e 00 00 	mov    0x4ef6(%rip),%rax        # 5fe0 <_ITM_deregisterTMCloneTable@Base>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <deregister_tm_clones+0x28>
    10ef:	ff e0                	jmp    *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001100 <register_tm_clones>:
    1100:	48 8d 3d 11 51 00 00 	lea    0x5111(%rip),%rdi        # 6218 <__TMC_END__>
    1107:	48 8d 35 0a 51 00 00 	lea    0x510a(%rip),%rsi        # 6218 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <register_tm_clones+0x38>
    1124:	48 8b 05 c5 4e 00 00 	mov    0x4ec5(%rip),%rax        # 5ff0 <_ITM_registerTMCloneTable@Base>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <register_tm_clones+0x38>
    1130:	ff e0                	jmp    *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <__do_global_dtors_aux>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d cd 50 00 00 00 	cmpb   $0x0,0x50cd(%rip)        # 6218 <__TMC_END__>
    114b:	75 2b                	jne    1178 <__do_global_dtors_aux+0x38>
    114d:	55                   	push   %rbp
    114e:	48 83 3d a2 4e 00 00 	cmpq   $0x0,0x4ea2(%rip)        # 5ff8 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0c                	je     1167 <__do_global_dtors_aux+0x27>
    115b:	48 8b 3d a6 4e 00 00 	mov    0x4ea6(%rip),%rdi        # 6008 <__dso_handle>
    1162:	e8 09 ff ff ff       	call   1070 <__cxa_finalize@plt>
    1167:	e8 64 ff ff ff       	call   10d0 <deregister_tm_clones>
    116c:	c6 05 a5 50 00 00 01 	movb   $0x1,0x50a5(%rip)        # 6218 <__TMC_END__>
    1173:	5d                   	pop    %rbp
    1174:	c3                   	ret    
    1175:	0f 1f 00             	nopl   (%rax)
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <frame_dummy>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	e9 77 ff ff ff       	jmp    1100 <register_tm_clones>
    1189:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001190 <sha3>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	41 57                	push   %r15
    1196:	41 56                	push   %r14
    1198:	41 55                	push   %r13
    119a:	49 89 fe             	mov    %rdi,%r14
    119d:	41 54                	push   %r12
    119f:	55                   	push   %rbp
    11a0:	53                   	push   %rbx
    11a1:	48 89 d3             	mov    %rdx,%rbx
    11a4:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    11ab:	49 89 f5             	mov    %rsi,%r13
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	48 89 ef             	mov    %rbp,%rdi
    11b4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11bb:	00 00 
    11bd:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    11c4:	00 
    11c5:	31 c0                	xor    %eax,%eax
    11c7:	e8 94 05 00 00       	call   1760 <KeccakP1600_Initialize>
    11cc:	48 85 db             	test   %rbx,%rbx
    11cf:	0f 84 cb 00 00 00    	je     12a0 <sha3+0x110>
    11d5:	45 31 ff             	xor    %r15d,%r15d
    11d8:	45 31 e4             	xor    %r12d,%r12d
    11db:	31 c0                	xor    %eax,%eax
    11dd:	0f 1f 00             	nopl   (%rax)
    11e0:	41 0f b6 74 05 00    	movzbl 0x0(%r13,%rax,1),%esi
    11e6:	44 89 e2             	mov    %r12d,%edx
    11e9:	48 89 ef             	mov    %rbp,%rdi
    11ec:	41 ff c4             	inc    %r12d
    11ef:	e8 9f 05 00 00       	call   1793 <KeccakP1600_AddByte>
    11f4:	4c 89 e0             	mov    %r12,%rax
    11f7:	4d 69 e4 1f 85 eb 51 	imul   $0x51eb851f,%r12,%r12
    11fe:	49 c1 ec 26          	shr    $0x26,%r12
    1202:	41 69 d4 c8 00 00 00 	imul   $0xc8,%r12d,%edx
    1209:	29 d0                	sub    %edx,%eax
    120b:	41 89 c4             	mov    %eax,%r12d
    120e:	41 8d 47 01          	lea    0x1(%r15),%eax
    1212:	49 89 c7             	mov    %rax,%r15
    1215:	48 39 d8             	cmp    %rbx,%rax
    1218:	72 c6                	jb     11e0 <sha3+0x50>
    121a:	45 8d 6c 24 01       	lea    0x1(%r12),%r13d
    121f:	4c 89 e8             	mov    %r13,%rax
    1222:	4d 69 ed 1f 85 eb 51 	imul   $0x51eb851f,%r13,%r13
    1229:	49 c1 ed 26          	shr    $0x26,%r13
    122d:	41 69 d5 c8 00 00 00 	imul   $0xc8,%r13d,%edx
    1234:	29 d0                	sub    %edx,%eax
    1236:	41 89 c5             	mov    %eax,%r13d
    1239:	44 89 e2             	mov    %r12d,%edx
    123c:	be 06 00 00 00       	mov    $0x6,%esi
    1241:	48 89 ef             	mov    %rbp,%rdi
    1244:	e8 4a 05 00 00       	call   1793 <KeccakP1600_AddByte>
    1249:	44 89 ea             	mov    %r13d,%edx
    124c:	be 80 00 00 00       	mov    $0x80,%esi
    1251:	48 89 ef             	mov    %rbp,%rdi
    1254:	e8 3a 05 00 00       	call   1793 <KeccakP1600_AddByte>
    1259:	48 89 ef             	mov    %rbp,%rdi
    125c:	e8 8e 0a 00 00       	call   1cef <KeccakP1600_Permute_24rounds>
    1261:	31 d2                	xor    %edx,%edx
    1263:	b9 20 00 00 00       	mov    $0x20,%ecx
    1268:	4c 89 f6             	mov    %r14,%rsi
    126b:	48 89 ef             	mov    %rbp,%rdi
    126e:	e8 cb 06 00 00       	call   193e <KeccakP1600_ExtractBytes>
    1273:	48 8b 84 24 c8 00 00 	mov    0xc8(%rsp),%rax
    127a:	00 
    127b:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1282:	00 00 
    1284:	75 25                	jne    12ab <sha3+0x11b>
    1286:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    128d:	31 c0                	xor    %eax,%eax
    128f:	5b                   	pop    %rbx
    1290:	5d                   	pop    %rbp
    1291:	41 5c                	pop    %r12
    1293:	41 5d                	pop    %r13
    1295:	41 5e                	pop    %r14
    1297:	41 5f                	pop    %r15
    1299:	c3                   	ret    
    129a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12a0:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    12a6:	45 31 e4             	xor    %r12d,%r12d
    12a9:	eb 8e                	jmp    1239 <sha3+0xa9>
    12ab:	e8 90 fd ff ff       	call   1040 <__stack_chk_fail@plt>

00000000000012b0 <compare_bytes>:
    12b0:	f3 0f 1e fa          	endbr64 
    12b4:	48 85 d2             	test   %rdx,%rdx
    12b7:	74 27                	je     12e0 <compare_bytes+0x30>
    12b9:	31 c0                	xor    %eax,%eax
    12bb:	eb 0b                	jmp    12c8 <compare_bytes+0x18>
    12bd:	0f 1f 00             	nopl   (%rax)
    12c0:	48 ff c0             	inc    %rax
    12c3:	48 39 c2             	cmp    %rax,%rdx
    12c6:	74 18                	je     12e0 <compare_bytes+0x30>
    12c8:	0f b6 0c 06          	movzbl (%rsi,%rax,1),%ecx
    12cc:	38 0c 07             	cmp    %cl,(%rdi,%rax,1)
    12cf:	74 ef                	je     12c0 <compare_bytes+0x10>
    12d1:	b8 01 00 00 00       	mov    $0x1,%eax
    12d6:	c3                   	ret    
    12d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    12de:	00 00 
    12e0:	31 c0                	xor    %eax,%eax
    12e2:	c3                   	ret    
    12e3:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    12ea:	00 00 00 00 
    12ee:	66 90                	xchg   %ax,%ax

00000000000012f0 <hex_to_bytes>:
    12f0:	f3 0f 1e fa          	endbr64 
    12f4:	48 85 d2             	test   %rdx,%rdx
    12f7:	74 57                	je     1350 <hex_to_bytes+0x60>
    12f9:	41 55                	push   %r13
    12fb:	41 54                	push   %r12
    12fd:	55                   	push   %rbp
    12fe:	4c 8d 2c 57          	lea    (%rdi,%rdx,2),%r13
    1302:	53                   	push   %rbx
    1303:	48 89 f5             	mov    %rsi,%rbp
    1306:	48 89 fb             	mov    %rdi,%rbx
    1309:	4c 8d 25 f4 1c 00 00 	lea    0x1cf4(%rip),%r12        # 3004 <_IO_stdin_used+0x4>
    1310:	48 83 ec 08          	sub    $0x8,%rsp
    1314:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    131b:	00 00 00 00 
    131f:	90                   	nop
    1320:	48 89 ea             	mov    %rbp,%rdx
    1323:	48 89 df             	mov    %rbx,%rdi
    1326:	4c 89 e6             	mov    %r12,%rsi
    1329:	31 c0                	xor    %eax,%eax
    132b:	48 83 c3 02          	add    $0x2,%rbx
    132f:	e8 1c fd ff ff       	call   1050 <__isoc99_sscanf@plt>
    1334:	48 ff c5             	inc    %rbp
    1337:	4c 39 eb             	cmp    %r13,%rbx
    133a:	75 e4                	jne    1320 <hex_to_bytes+0x30>
    133c:	48 83 c4 08          	add    $0x8,%rsp
    1340:	31 c0                	xor    %eax,%eax
    1342:	5b                   	pop    %rbx
    1343:	5d                   	pop    %rbp
    1344:	41 5c                	pop    %r12
    1346:	41 5d                	pop    %r13
    1348:	c3                   	ret    
    1349:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1350:	31 c0                	xor    %eax,%eax
    1352:	c3                   	ret    
    1353:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    135a:	00 00 00 00 
    135e:	66 90                	xchg   %ax,%ax

0000000000001360 <sha3_tests>:
    1360:	f3 0f 1e fa          	endbr64 
    1364:	55                   	push   %rbp
    1365:	48 89 e5             	mov    %rsp,%rbp
    1368:	41 57                	push   %r15
    136a:	41 56                	push   %r14
    136c:	41 55                	push   %r13
    136e:	41 54                	push   %r12
    1370:	53                   	push   %rbx
    1371:	4c 8d 75 a0          	lea    -0x60(%rbp),%r14
    1375:	4c 8d 6d c0          	lea    -0x40(%rbp),%r13
    1379:	48 81 ec 78 01 00 00 	sub    $0x178,%rsp
    1380:	4c 8d 25 7d 1c 00 00 	lea    0x1c7d(%rip),%r12        # 3004 <_IO_stdin_used+0x4>
    1387:	4c 8d 3d 8e 1c 00 00 	lea    0x1c8e(%rip),%r15        # 301c <_IO_stdin_used+0x1c>
    138e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1395:	00 00 
    1397:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    139b:	48 8d 05 7e 4c 00 00 	lea    0x4c7e(%rip),%rax        # 6020 <test_vectors>
    13a2:	48 c7 85 90 fe ff ff 	movq   $0x0,-0x170(%rbp)
    13a9:	00 00 00 00 
    13ad:	48 89 85 80 fe ff ff 	mov    %rax,-0x180(%rbp)
    13b4:	48 8d 85 b0 fe ff ff 	lea    -0x150(%rbp),%rax
    13bb:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
    13c2:	48 8d 45 80          	lea    -0x80(%rbp),%rax
    13c6:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
    13cd:	0f 1f 00             	nopl   (%rax)
    13d0:	48 ff 85 90 fe ff ff 	incq   -0x170(%rbp)
    13d7:	48 8d 35 2c 1c 00 00 	lea    0x1c2c(%rip),%rsi        # 300a <_IO_stdin_used+0xa>
    13de:	bf 01 00 00 00       	mov    $0x1,%edi
    13e3:	31 c0                	xor    %eax,%eax
    13e5:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    13ec:	48 89 a5 78 fe ff ff 	mov    %rsp,-0x188(%rbp)
    13f3:	e8 68 fc ff ff       	call   1060 <__printf_chk@plt>
    13f8:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
    13ff:	48 89 e6             	mov    %rsp,%rsi
    1402:	48 8b 38             	mov    (%rax),%rdi
    1405:	48 8b 48 08          	mov    0x8(%rax),%rcx
    1409:	48 8b 40 10          	mov    0x10(%rax),%rax
    140d:	48 89 bd a8 fe ff ff 	mov    %rdi,-0x158(%rbp)
    1414:	48 89 85 70 fe ff ff 	mov    %rax,-0x190(%rbp)
    141b:	48 8d 47 0f          	lea    0xf(%rdi),%rax
    141f:	48 89 c2             	mov    %rax,%rdx
    1422:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    1428:	48 29 c6             	sub    %rax,%rsi
    142b:	48 83 e2 f0          	and    $0xfffffffffffffff0,%rdx
    142f:	48 39 f4             	cmp    %rsi,%rsp
    1432:	74 15                	je     1449 <sha3_tests+0xe9>
    1434:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    143b:	48 83 8c 24 f8 0f 00 	orq    $0x0,0xff8(%rsp)
    1442:	00 00 
    1444:	48 39 f4             	cmp    %rsi,%rsp
    1447:	75 eb                	jne    1434 <sha3_tests+0xd4>
    1449:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
    144f:	48 29 d4             	sub    %rdx,%rsp
    1452:	48 85 d2             	test   %rdx,%rdx
    1455:	74 06                	je     145d <sha3_tests+0xfd>
    1457:	48 83 4c 14 f8 00    	orq    $0x0,-0x8(%rsp,%rdx,1)
    145d:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
    1464:	00 
    1465:	48 89 a5 a0 fe ff ff 	mov    %rsp,-0x160(%rbp)
    146c:	74 5c                	je     14ca <sha3_tests+0x16a>
    146e:	48 8b 85 a8 fe ff ff 	mov    -0x158(%rbp),%rax
    1475:	48 89 e2             	mov    %rsp,%rdx
    1478:	4c 89 ad 68 fe ff ff 	mov    %r13,-0x198(%rbp)
    147f:	4c 89 b5 60 fe ff ff 	mov    %r14,-0x1a0(%rbp)
    1486:	49 89 cd             	mov    %rcx,%r13
    1489:	49 89 d6             	mov    %rdx,%r14
    148c:	48 8d 04 41          	lea    (%rcx,%rax,2),%rax
    1490:	48 89 c3             	mov    %rax,%rbx
    1493:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    149a:	00 00 00 00 
    149e:	66 90                	xchg   %ax,%ax
    14a0:	4c 89 f2             	mov    %r14,%rdx
    14a3:	4c 89 ef             	mov    %r13,%rdi
    14a6:	4c 89 e6             	mov    %r12,%rsi
    14a9:	31 c0                	xor    %eax,%eax
    14ab:	49 83 c5 02          	add    $0x2,%r13
    14af:	e8 9c fb ff ff       	call   1050 <__isoc99_sscanf@plt>
    14b4:	49 ff c6             	inc    %r14
    14b7:	49 39 dd             	cmp    %rbx,%r13
    14ba:	75 e4                	jne    14a0 <sha3_tests+0x140>
    14bc:	4c 8b ad 68 fe ff ff 	mov    -0x198(%rbp),%r13
    14c3:	4c 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%r14
    14ca:	48 8b 8d 70 fe ff ff 	mov    -0x190(%rbp),%rcx
    14d1:	4c 89 f3             	mov    %r14,%rbx
    14d4:	4c 89 b5 70 fe ff ff 	mov    %r14,-0x190(%rbp)
    14db:	4c 89 b5 68 fe ff ff 	mov    %r14,-0x198(%rbp)
    14e2:	49 89 ce             	mov    %rcx,%r14
    14e5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    14ec:	00 00 00 00 
    14f0:	48 89 da             	mov    %rbx,%rdx
    14f3:	4c 89 f7             	mov    %r14,%rdi
    14f6:	4c 89 e6             	mov    %r12,%rsi
    14f9:	31 c0                	xor    %eax,%eax
    14fb:	48 ff c3             	inc    %rbx
    14fe:	e8 4d fb ff ff       	call   1050 <__isoc99_sscanf@plt>
    1503:	49 83 c6 02          	add    $0x2,%r14
    1507:	4c 39 eb             	cmp    %r13,%rbx
    150a:	75 e4                	jne    14f0 <sha3_tests+0x190>
    150c:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    1513:	48 8b 9d 70 fe ff ff 	mov    -0x190(%rbp),%rbx
    151a:	4c 8b b5 68 fe ff ff 	mov    -0x198(%rbp),%r14
    1521:	e8 3a 02 00 00       	call   1760 <KeccakP1600_Initialize>
    1526:	48 83 bd a8 fe ff ff 	cmpq   $0x0,-0x158(%rbp)
    152d:	00 
    152e:	0f 84 15 02 00 00    	je     1749 <sha3_tests+0x3e9>
    1534:	4c 89 b5 60 fe ff ff 	mov    %r14,-0x1a0(%rbp)
    153b:	4c 8b b5 98 fe ff ff 	mov    -0x168(%rbp),%r14
    1542:	31 c9                	xor    %ecx,%ecx
    1544:	31 d2                	xor    %edx,%edx
    1546:	48 89 9d 70 fe ff ff 	mov    %rbx,-0x190(%rbp)
    154d:	4c 89 ad 68 fe ff ff 	mov    %r13,-0x198(%rbp)
    1554:	31 c0                	xor    %eax,%eax
    1556:	89 d3                	mov    %edx,%ebx
    1558:	41 89 cd             	mov    %ecx,%r13d
    155b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1560:	48 8b 8d a0 fe ff ff 	mov    -0x160(%rbp),%rcx
    1567:	89 da                	mov    %ebx,%edx
    1569:	4c 89 f7             	mov    %r14,%rdi
    156c:	0f b6 34 01          	movzbl (%rcx,%rax,1),%esi
    1570:	e8 1e 02 00 00       	call   1793 <KeccakP1600_AddByte>
    1575:	8d 53 01             	lea    0x1(%rbx),%edx
    1578:	48 89 d0             	mov    %rdx,%rax
    157b:	48 69 d2 1f 85 eb 51 	imul   $0x51eb851f,%rdx,%rdx
    1582:	48 c1 ea 26          	shr    $0x26,%rdx
    1586:	69 f2 c8 00 00 00    	imul   $0xc8,%edx,%esi
    158c:	29 f0                	sub    %esi,%eax
    158e:	89 c3                	mov    %eax,%ebx
    1590:	41 8d 45 01          	lea    0x1(%r13),%eax
    1594:	49 89 c5             	mov    %rax,%r13
    1597:	48 39 85 a8 fe ff ff 	cmp    %rax,-0x158(%rbp)
    159e:	77 c0                	ja     1560 <sha3_tests+0x200>
    15a0:	89 da                	mov    %ebx,%edx
    15a2:	4c 8b ad 68 fe ff ff 	mov    -0x198(%rbp),%r13
    15a9:	48 8b 9d 70 fe ff ff 	mov    -0x190(%rbp),%rbx
    15b0:	44 8d 42 01          	lea    0x1(%rdx),%r8d
    15b4:	4c 8b b5 60 fe ff ff 	mov    -0x1a0(%rbp),%r14
    15bb:	4c 89 c0             	mov    %r8,%rax
    15be:	4d 69 c0 1f 85 eb 51 	imul   $0x51eb851f,%r8,%r8
    15c5:	49 c1 e8 26          	shr    $0x26,%r8
    15c9:	41 69 c8 c8 00 00 00 	imul   $0xc8,%r8d,%ecx
    15d0:	29 c8                	sub    %ecx,%eax
    15d2:	41 89 c0             	mov    %eax,%r8d
    15d5:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    15dc:	be 06 00 00 00       	mov    $0x6,%esi
    15e1:	44 89 85 a8 fe ff ff 	mov    %r8d,-0x158(%rbp)
    15e8:	e8 a6 01 00 00       	call   1793 <KeccakP1600_AddByte>
    15ed:	8b 95 a8 fe ff ff    	mov    -0x158(%rbp),%edx
    15f3:	be 80 00 00 00       	mov    $0x80,%esi
    15f8:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    15ff:	e8 8f 01 00 00       	call   1793 <KeccakP1600_AddByte>
    1604:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    160b:	e8 df 06 00 00       	call   1cef <KeccakP1600_Permute_24rounds>
    1610:	48 8b b5 88 fe ff ff 	mov    -0x178(%rbp),%rsi
    1617:	31 d2                	xor    %edx,%edx
    1619:	b9 20 00 00 00       	mov    $0x20,%ecx
    161e:	48 8b bd 98 fe ff ff 	mov    -0x168(%rbp),%rdi
    1625:	e8 14 03 00 00       	call   193e <KeccakP1600_ExtractBytes>
    162a:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
    1631:	31 c0                	xor    %eax,%eax
    1633:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    163a:	00 00 00 00 
    163e:	66 90                	xchg   %ax,%ax
    1640:	41 0f b6 0c 06       	movzbl (%r14,%rax,1),%ecx
    1645:	38 0c 02             	cmp    %cl,(%rdx,%rax,1)
    1648:	75 66                	jne    16b0 <sha3_tests+0x350>
    164a:	48 ff c0             	inc    %rax
    164d:	48 83 f8 20          	cmp    $0x20,%rax
    1651:	75 ed                	jne    1640 <sha3_tests+0x2e0>
    1653:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    165a:	48 8d 35 d1 19 00 00 	lea    0x19d1(%rip),%rsi        # 3032 <_IO_stdin_used+0x32>
    1661:	bf 01 00 00 00       	mov    $0x1,%edi
    1666:	31 c0                	xor    %eax,%eax
    1668:	e8 f3 f9 ff ff       	call   1060 <__printf_chk@plt>
    166d:	48 83 85 80 fe ff ff 	addq   $0x18,-0x180(%rbp)
    1674:	18 
    1675:	48 83 bd 90 fe ff ff 	cmpq   $0x15,-0x170(%rbp)
    167c:	15 
    167d:	48 8b a5 78 fe ff ff 	mov    -0x188(%rbp),%rsp
    1684:	0f 85 46 fd ff ff    	jne    13d0 <sha3_tests+0x70>
    168a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    168e:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    1695:	00 00 
    1697:	0f 85 b9 00 00 00    	jne    1756 <sha3_tests+0x3f6>
    169d:	48 8d 65 d8          	lea    -0x28(%rbp),%rsp
    16a1:	5b                   	pop    %rbx
    16a2:	41 5c                	pop    %r12
    16a4:	41 5d                	pop    %r13
    16a6:	41 5e                	pop    %r14
    16a8:	41 5f                	pop    %r15
    16aa:	5d                   	pop    %rbp
    16ab:	c3                   	ret    
    16ac:	0f 1f 40 00          	nopl   0x0(%rax)
    16b0:	48 8b 95 90 fe ff ff 	mov    -0x170(%rbp),%rdx
    16b7:	48 8d 35 85 19 00 00 	lea    0x1985(%rip),%rsi        # 3043 <_IO_stdin_used+0x43>
    16be:	bf 01 00 00 00       	mov    $0x1,%edi
    16c3:	31 c0                	xor    %eax,%eax
    16c5:	e8 96 f9 ff ff       	call   1060 <__printf_chk@plt>
    16ca:	48 8d 35 83 19 00 00 	lea    0x1983(%rip),%rsi        # 3054 <_IO_stdin_used+0x54>
    16d1:	bf 01 00 00 00       	mov    $0x1,%edi
    16d6:	31 c0                	xor    %eax,%eax
    16d8:	e8 83 f9 ff ff       	call   1060 <__printf_chk@plt>
    16dd:	0f 1f 00             	nopl   (%rax)
    16e0:	0f b6 13             	movzbl (%rbx),%edx
    16e3:	4c 89 fe             	mov    %r15,%rsi
    16e6:	bf 01 00 00 00       	mov    $0x1,%edi
    16eb:	31 c0                	xor    %eax,%eax
    16ed:	48 ff c3             	inc    %rbx
    16f0:	e8 6b f9 ff ff       	call   1060 <__printf_chk@plt>
    16f5:	49 39 dd             	cmp    %rbx,%r13
    16f8:	75 e6                	jne    16e0 <sha3_tests+0x380>
    16fa:	48 8d 35 20 19 00 00 	lea    0x1920(%rip),%rsi        # 3021 <_IO_stdin_used+0x21>
    1701:	bf 01 00 00 00       	mov    $0x1,%edi
    1706:	31 c0                	xor    %eax,%eax
    1708:	e8 53 f9 ff ff       	call   1060 <__printf_chk@plt>
    170d:	48 8b 9d 88 fe ff ff 	mov    -0x178(%rbp),%rbx
    1714:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    171b:	00 00 00 00 
    171f:	90                   	nop
    1720:	0f b6 13             	movzbl (%rbx),%edx
    1723:	4c 89 fe             	mov    %r15,%rsi
    1726:	bf 01 00 00 00       	mov    $0x1,%edi
    172b:	31 c0                	xor    %eax,%eax
    172d:	48 ff c3             	inc    %rbx
    1730:	e8 2b f9 ff ff       	call   1060 <__printf_chk@plt>
    1735:	49 39 de             	cmp    %rbx,%r14
    1738:	75 e6                	jne    1720 <sha3_tests+0x3c0>
    173a:	bf 0a 00 00 00       	mov    $0xa,%edi
    173f:	e8 ec f8 ff ff       	call   1030 <putchar@plt>
    1744:	e9 24 ff ff ff       	jmp    166d <sha3_tests+0x30d>
    1749:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    174f:	31 d2                	xor    %edx,%edx
    1751:	e9 7f fe ff ff       	jmp    15d5 <sha3_tests+0x275>
    1756:	e8 e5 f8 ff ff       	call   1040 <__stack_chk_fail@plt>
    175b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001760 <KeccakP1600_Initialize>:
    1760:	c5 fd ef c0          	vpxor  %ymm0,%ymm0,%ymm0
    1764:	c5 fe 7f 07          	vmovdqu %ymm0,(%rdi)
    1768:	c5 fe 7f 47 20       	vmovdqu %ymm0,0x20(%rdi)
    176d:	c5 fe 7f 47 40       	vmovdqu %ymm0,0x40(%rdi)
    1772:	c5 fe 7f 47 60       	vmovdqu %ymm0,0x60(%rdi)
    1777:	c5 fe 7f 87 80 00 00 	vmovdqu %ymm0,0x80(%rdi)
    177e:	00 
    177f:	c5 fe 7f 87 a0 00 00 	vmovdqu %ymm0,0xa0(%rdi)
    1786:	00 
    1787:	48 c7 87 c0 00 00 00 	movq   $0x0,0xc0(%rdi)
    178e:	00 00 00 00 
    1792:	c3                   	ret    

0000000000001793 <KeccakP1600_AddByte>:
    1793:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    179a:	00 00 00 00 
    179e:	66 90                	xchg   %ax,%ax
    17a0:	48 89 d0             	mov    %rdx,%rax
    17a3:	48 83 e0 07          	and    $0x7,%rax
    17a7:	83 e2 f8             	and    $0xfffffff8,%edx
    17aa:	4c 8d 0d 0f 25 00 00 	lea    0x250f(%rip),%r9        # 3cc0 <mapState>
    17b1:	49 8b 14 11          	mov    (%r9,%rdx,1),%rdx
    17b5:	48 01 d7             	add    %rdx,%rdi
    17b8:	48 01 c7             	add    %rax,%rdi
    17bb:	40 30 37             	xor    %sil,(%rdi)
    17be:	c3                   	ret    

00000000000017bf <KeccakP1600_AddBytes>:
    17bf:	90                   	nop
    17c0:	48 83 f9 00          	cmp    $0x0,%rcx
    17c4:	74 7e                	je     1844 <KeccakP1600_AddBytes_Exit>
    17c6:	48 89 d0             	mov    %rdx,%rax
    17c9:	83 e2 f8             	and    $0xfffffff8,%edx
    17cc:	4c 8d 0d ed 24 00 00 	lea    0x24ed(%rip),%r9        # 3cc0 <mapState>
    17d3:	4c 01 ca             	add    %r9,%rdx
    17d6:	48 83 e0 07          	and    $0x7,%rax
    17da:	74 45                	je     1821 <KeccakP1600_AddBytes_LaneAlignedCheck>
    17dc:	49 c7 c1 08 00 00 00 	mov    $0x8,%r9
    17e3:	49 29 c1             	sub    %rax,%r9
    17e6:	49 39 c9             	cmp    %rcx,%r9
    17e9:	4c 0f 43 c9          	cmovae %rcx,%r9
    17ed:	4c 29 c9             	sub    %r9,%rcx
    17f0:	48 03 02             	add    (%rdx),%rax
    17f3:	48 83 c2 08          	add    $0x8,%rdx
    17f7:	48 01 f8             	add    %rdi,%rax

00000000000017fa <KeccakP1600_AddBytes_NotAlignedLoop>:
    17fa:	44 8a 06             	mov    (%rsi),%r8b
    17fd:	48 ff c6             	inc    %rsi
    1800:	44 30 00             	xor    %r8b,(%rax)
    1803:	48 ff c0             	inc    %rax
    1806:	49 ff c9             	dec    %r9
    1809:	75 ef                	jne    17fa <KeccakP1600_AddBytes_NotAlignedLoop>
    180b:	eb 14                	jmp    1821 <KeccakP1600_AddBytes_LaneAlignedCheck>

000000000000180d <KeccakP1600_AddBytes_LaneAlignedLoop>:
    180d:	4c 8b 06             	mov    (%rsi),%r8
    1810:	48 83 c6 08          	add    $0x8,%rsi
    1814:	48 8b 02             	mov    (%rdx),%rax
    1817:	48 83 c2 08          	add    $0x8,%rdx
    181b:	48 01 f8             	add    %rdi,%rax
    181e:	4c 31 00             	xor    %r8,(%rax)

0000000000001821 <KeccakP1600_AddBytes_LaneAlignedCheck>:
    1821:	48 83 e9 08          	sub    $0x8,%rcx
    1825:	73 e6                	jae    180d <KeccakP1600_AddBytes_LaneAlignedLoop>

0000000000001827 <KeccakP1600_AddBytes_LastIncompleteLane>:
    1827:	48 83 c1 08          	add    $0x8,%rcx
    182b:	74 17                	je     1844 <KeccakP1600_AddBytes_Exit>
    182d:	48 8b 02             	mov    (%rdx),%rax
    1830:	48 01 f8             	add    %rdi,%rax

0000000000001833 <KeccakP1600_AddBytes_LastIncompleteLaneLoop>:
    1833:	44 8a 06             	mov    (%rsi),%r8b
    1836:	48 ff c6             	inc    %rsi
    1839:	44 30 00             	xor    %r8b,(%rax)
    183c:	48 ff c0             	inc    %rax
    183f:	48 ff c9             	dec    %rcx
    1842:	75 ef                	jne    1833 <KeccakP1600_AddBytes_LastIncompleteLaneLoop>

0000000000001844 <KeccakP1600_AddBytes_Exit>:
    1844:	c3                   	ret    

0000000000001845 <KeccakP1600_OverwriteBytes>:
    1845:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    184c:	00 00 00 00 
    1850:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1857:	00 00 00 00 
    185b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1860:	48 83 f9 00          	cmp    $0x0,%rcx
    1864:	74 7e                	je     18e4 <KeccakP1600_OverwriteBytes_Exit>
    1866:	48 89 d0             	mov    %rdx,%rax
    1869:	83 e2 f8             	and    $0xfffffff8,%edx
    186c:	4c 8d 0d 4d 24 00 00 	lea    0x244d(%rip),%r9        # 3cc0 <mapState>
    1873:	4c 01 ca             	add    %r9,%rdx
    1876:	48 83 e0 07          	and    $0x7,%rax
    187a:	74 45                	je     18c1 <KeccakP1600_OverwriteBytes_LaneAlignedCheck>
    187c:	49 c7 c1 08 00 00 00 	mov    $0x8,%r9
    1883:	49 29 c1             	sub    %rax,%r9
    1886:	49 39 c9             	cmp    %rcx,%r9
    1889:	4c 0f 43 c9          	cmovae %rcx,%r9
    188d:	4c 29 c9             	sub    %r9,%rcx
    1890:	48 03 02             	add    (%rdx),%rax
    1893:	48 83 c2 08          	add    $0x8,%rdx
    1897:	48 01 f8             	add    %rdi,%rax

000000000000189a <KeccakP1600_OverwriteBytes_NotAlignedLoop>:
    189a:	44 8a 06             	mov    (%rsi),%r8b
    189d:	48 ff c6             	inc    %rsi
    18a0:	44 88 00             	mov    %r8b,(%rax)
    18a3:	48 ff c0             	inc    %rax
    18a6:	49 ff c9             	dec    %r9
    18a9:	75 ef                	jne    189a <KeccakP1600_OverwriteBytes_NotAlignedLoop>
    18ab:	eb 14                	jmp    18c1 <KeccakP1600_OverwriteBytes_LaneAlignedCheck>

00000000000018ad <KeccakP1600_OverwriteBytes_LaneAlignedLoop>:
    18ad:	4c 8b 06             	mov    (%rsi),%r8
    18b0:	48 83 c6 08          	add    $0x8,%rsi
    18b4:	48 8b 02             	mov    (%rdx),%rax
    18b7:	48 83 c2 08          	add    $0x8,%rdx
    18bb:	48 01 f8             	add    %rdi,%rax
    18be:	4c 89 00             	mov    %r8,(%rax)

00000000000018c1 <KeccakP1600_OverwriteBytes_LaneAlignedCheck>:
    18c1:	48 83 e9 08          	sub    $0x8,%rcx
    18c5:	73 e6                	jae    18ad <KeccakP1600_OverwriteBytes_LaneAlignedLoop>

00000000000018c7 <KeccakP1600_OverwriteBytes_LastIncompleteLane>:
    18c7:	48 83 c1 08          	add    $0x8,%rcx
    18cb:	74 17                	je     18e4 <KeccakP1600_OverwriteBytes_Exit>
    18cd:	48 8b 02             	mov    (%rdx),%rax
    18d0:	48 01 f8             	add    %rdi,%rax

00000000000018d3 <KeccakP1600_OverwriteBytes_LastIncompleteLaneLoop>:
    18d3:	44 8a 06             	mov    (%rsi),%r8b
    18d6:	48 ff c6             	inc    %rsi
    18d9:	44 88 00             	mov    %r8b,(%rax)
    18dc:	48 ff c0             	inc    %rax
    18df:	48 ff c9             	dec    %rcx
    18e2:	75 ef                	jne    18d3 <KeccakP1600_OverwriteBytes_LastIncompleteLaneLoop>

00000000000018e4 <KeccakP1600_OverwriteBytes_Exit>:
    18e4:	c3                   	ret    

00000000000018e5 <KeccakP1600_OverwriteWithZeroes>:
    18e5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    18ec:	00 00 00 00 
    18f0:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    18f7:	00 00 00 00 
    18fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1900:	48 83 fe 00          	cmp    $0x0,%rsi
    1904:	74 37                	je     193d <KeccakP1600_OverwriteWithZeroes_Exit>
    1906:	48 8d 15 b3 23 00 00 	lea    0x23b3(%rip),%rdx        # 3cc0 <mapState>
    190d:	eb 11                	jmp    1920 <KeccakP1600_OverwriteWithZeroes_LaneAlignedCheck>

000000000000190f <KeccakP1600_OverwriteWithZeroes_LaneAlignedLoop>:
    190f:	48 8b 02             	mov    (%rdx),%rax
    1912:	48 83 c2 08          	add    $0x8,%rdx
    1916:	48 01 f8             	add    %rdi,%rax
    1919:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)

0000000000001920 <KeccakP1600_OverwriteWithZeroes_LaneAlignedCheck>:
    1920:	48 83 ee 08          	sub    $0x8,%rsi
    1924:	73 e9                	jae    190f <KeccakP1600_OverwriteWithZeroes_LaneAlignedLoop>

0000000000001926 <KeccakP1600_OverwriteWithZeroes_LastIncompleteLane>:
    1926:	48 83 c6 08          	add    $0x8,%rsi
    192a:	74 11                	je     193d <KeccakP1600_OverwriteWithZeroes_Exit>
    192c:	48 8b 02             	mov    (%rdx),%rax
    192f:	48 01 f8             	add    %rdi,%rax

0000000000001932 <KeccakP1600_OverwriteWithZeroes_LastIncompleteLaneLoop>:
    1932:	c6 00 00             	movb   $0x0,(%rax)
    1935:	48 ff c0             	inc    %rax
    1938:	48 ff ce             	dec    %rsi
    193b:	75 f5                	jne    1932 <KeccakP1600_OverwriteWithZeroes_LastIncompleteLaneLoop>

000000000000193d <KeccakP1600_OverwriteWithZeroes_Exit>:
    193d:	c3                   	ret    

000000000000193e <KeccakP1600_ExtractBytes>:
    193e:	66 90                	xchg   %ax,%ax
    1940:	53                   	push   %rbx
    1941:	48 83 f9 00          	cmp    $0x0,%rcx
    1945:	0f 84 82 00 00 00    	je     19cd <KeccakP1600_ExtractBytes_Exit>
    194b:	48 89 d0             	mov    %rdx,%rax
    194e:	83 e2 f8             	and    $0xfffffff8,%edx
    1951:	4c 8d 0d 68 23 00 00 	lea    0x2368(%rip),%r9        # 3cc0 <mapState>
    1958:	4c 01 ca             	add    %r9,%rdx
    195b:	48 83 e0 07          	and    $0x7,%rax
    195f:	74 48                	je     19a9 <KeccakP1600_ExtractBytes_LaneAlignedCheck>
    1961:	48 c7 c3 08 00 00 00 	mov    $0x8,%rbx
    1968:	48 29 c3             	sub    %rax,%rbx
    196b:	48 39 cb             	cmp    %rcx,%rbx
    196e:	48 0f 43 d9          	cmovae %rcx,%rbx
    1972:	48 29 d9             	sub    %rbx,%rcx
    1975:	4c 8b 0a             	mov    (%rdx),%r9
    1978:	48 83 c2 08          	add    $0x8,%rdx
    197c:	49 01 f9             	add    %rdi,%r9
    197f:	49 01 c1             	add    %rax,%r9

0000000000001982 <KeccakP1600_ExtractBytes_NotAlignedLoop>:
    1982:	45 8a 01             	mov    (%r9),%r8b
    1985:	49 ff c1             	inc    %r9
    1988:	44 88 06             	mov    %r8b,(%rsi)
    198b:	48 ff c6             	inc    %rsi
    198e:	48 ff cb             	dec    %rbx
    1991:	75 ef                	jne    1982 <KeccakP1600_ExtractBytes_NotAlignedLoop>
    1993:	eb 14                	jmp    19a9 <KeccakP1600_ExtractBytes_LaneAlignedCheck>

0000000000001995 <KeccakP1600_ExtractBytes_LaneAlignedLoop>:
    1995:	48 8b 02             	mov    (%rdx),%rax
    1998:	48 83 c2 08          	add    $0x8,%rdx
    199c:	48 01 f8             	add    %rdi,%rax
    199f:	4c 8b 00             	mov    (%rax),%r8
    19a2:	4c 89 06             	mov    %r8,(%rsi)
    19a5:	48 83 c6 08          	add    $0x8,%rsi

00000000000019a9 <KeccakP1600_ExtractBytes_LaneAlignedCheck>:
    19a9:	48 83 e9 08          	sub    $0x8,%rcx
    19ad:	73 e6                	jae    1995 <KeccakP1600_ExtractBytes_LaneAlignedLoop>

00000000000019af <KeccakP1600_ExtractBytes_LastIncompleteLane>:
    19af:	48 83 c1 08          	add    $0x8,%rcx
    19b3:	74 18                	je     19cd <KeccakP1600_ExtractBytes_Exit>
    19b5:	48 8b 02             	mov    (%rdx),%rax
    19b8:	48 01 f8             	add    %rdi,%rax
    19bb:	4c 8b 00             	mov    (%rax),%r8

00000000000019be <KeccakP1600_ExtractBytes_LastIncompleteLaneLoop>:
    19be:	44 88 06             	mov    %r8b,(%rsi)
    19c1:	49 c1 e8 08          	shr    $0x8,%r8
    19c5:	48 ff c6             	inc    %rsi
    19c8:	48 ff c9             	dec    %rcx
    19cb:	75 f1                	jne    19be <KeccakP1600_ExtractBytes_LastIncompleteLaneLoop>

00000000000019cd <KeccakP1600_ExtractBytes_Exit>:
    19cd:	5b                   	pop    %rbx
    19ce:	c3                   	ret    

00000000000019cf <KeccakP1600_ExtractAndAddBytes>:
    19cf:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    19d6:	00 00 00 00 
    19da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    19e0:	53                   	push   %rbx
    19e1:	41 52                	push   %r10
    19e3:	49 83 f8 00          	cmp    $0x0,%r8
    19e7:	0f 84 95 00 00 00    	je     1a82 <KeccakP1600_ExtractAndAddBytes_Exit>
    19ed:	48 89 c8             	mov    %rcx,%rax
    19f0:	83 e1 f8             	and    $0xfffffff8,%ecx
    19f3:	4c 8d 0d c6 22 00 00 	lea    0x22c6(%rip),%r9        # 3cc0 <mapState>
    19fa:	4c 01 c9             	add    %r9,%rcx
    19fd:	48 83 e0 07          	and    $0x7,%rax
    1a01:	74 55                	je     1a58 <KeccakP1600_ExtractAndAddBytes_LaneAlignedCheck>
    1a03:	48 c7 c3 08 00 00 00 	mov    $0x8,%rbx
    1a0a:	48 29 c3             	sub    %rax,%rbx
    1a0d:	4c 39 c3             	cmp    %r8,%rbx
    1a10:	49 0f 43 d8          	cmovae %r8,%rbx
    1a14:	49 29 d8             	sub    %rbx,%r8
    1a17:	4c 8b 09             	mov    (%rcx),%r9
    1a1a:	48 83 c1 08          	add    $0x8,%rcx
    1a1e:	49 01 f9             	add    %rdi,%r9
    1a21:	49 01 c1             	add    %rax,%r9

0000000000001a24 <KeccakP1600_ExtractAndAddBytes_NotAlignedLoop>:
    1a24:	45 8a 11             	mov    (%r9),%r10b
    1a27:	49 ff c1             	inc    %r9
    1a2a:	44 32 16             	xor    (%rsi),%r10b
    1a2d:	48 ff c6             	inc    %rsi
    1a30:	44 88 12             	mov    %r10b,(%rdx)
    1a33:	48 ff c2             	inc    %rdx
    1a36:	48 ff cb             	dec    %rbx
    1a39:	75 e9                	jne    1a24 <KeccakP1600_ExtractAndAddBytes_NotAlignedLoop>
    1a3b:	eb 1b                	jmp    1a58 <KeccakP1600_ExtractAndAddBytes_LaneAlignedCheck>

0000000000001a3d <KeccakP1600_ExtractAndAddBytes_LaneAlignedLoop>:
    1a3d:	48 8b 01             	mov    (%rcx),%rax
    1a40:	48 83 c1 08          	add    $0x8,%rcx
    1a44:	48 01 f8             	add    %rdi,%rax
    1a47:	4c 8b 10             	mov    (%rax),%r10
    1a4a:	4c 33 16             	xor    (%rsi),%r10
    1a4d:	48 83 c6 08          	add    $0x8,%rsi
    1a51:	4c 89 12             	mov    %r10,(%rdx)
    1a54:	48 83 c2 08          	add    $0x8,%rdx

0000000000001a58 <KeccakP1600_ExtractAndAddBytes_LaneAlignedCheck>:
    1a58:	49 83 e8 08          	sub    $0x8,%r8
    1a5c:	73 df                	jae    1a3d <KeccakP1600_ExtractAndAddBytes_LaneAlignedLoop>

0000000000001a5e <KeccakP1600_ExtractAndAddBytes_LastIncompleteLane>:
    1a5e:	49 83 c0 08          	add    $0x8,%r8
    1a62:	74 1e                	je     1a82 <KeccakP1600_ExtractAndAddBytes_Exit>
    1a64:	48 8b 01             	mov    (%rcx),%rax
    1a67:	48 01 f8             	add    %rdi,%rax
    1a6a:	4c 8b 10             	mov    (%rax),%r10

0000000000001a6d <KeccakP1600_ExtractAndAddBytes_LastIncompleteLaneLoop>:
    1a6d:	44 32 16             	xor    (%rsi),%r10b
    1a70:	48 ff c6             	inc    %rsi
    1a73:	44 88 12             	mov    %r10b,(%rdx)
    1a76:	48 ff c2             	inc    %rdx
    1a79:	49 c1 ea 08          	shr    $0x8,%r10
    1a7d:	49 ff c8             	dec    %r8
    1a80:	75 eb                	jne    1a6d <KeccakP1600_ExtractAndAddBytes_LastIncompleteLaneLoop>

0000000000001a82 <KeccakP1600_ExtractAndAddBytes_Exit>:
    1a82:	41 5a                	pop    %r10
    1a84:	5b                   	pop    %rbx
    1a85:	c3                   	ret    
    1a86:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1a8d:	00 00 00 00 
    1a91:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1a98:	00 00 00 00 
    1a9c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001aa0 <__KeccakF1600>:
    1aa0:	c5 7d 70 ea 4e       	vpshufd $0x4e,%ymm2,%ymm13
    1aa5:	c5 55 ef e3          	vpxor  %ymm3,%ymm5,%ymm12
    1aa9:	c5 5d ef ce          	vpxor  %ymm6,%ymm4,%ymm9
    1aad:	c5 1d ef e1          	vpxor  %ymm1,%ymm12,%ymm12
    1ab1:	c4 41 1d ef e1       	vpxor  %ymm9,%ymm12,%ymm12
    1ab6:	c4 43 fd 00 dc 93    	vpermq $0x93,%ymm12,%ymm11
    1abc:	c5 15 ef ea          	vpxor  %ymm2,%ymm13,%ymm13
    1ac0:	c4 c3 fd 00 fd 4e    	vpermq $0x4e,%ymm13,%ymm7
    1ac6:	c4 c1 3d 73 d4 3f    	vpsrlq $0x3f,%ymm12,%ymm8
    1acc:	c4 41 1d d4 cc       	vpaddq %ymm12,%ymm12,%ymm9
    1ad1:	c4 41 3d eb c1       	vpor   %ymm9,%ymm8,%ymm8
    1ad6:	c4 43 fd 00 f8 39    	vpermq $0x39,%ymm8,%ymm15
    1adc:	c4 41 3d ef f3       	vpxor  %ymm11,%ymm8,%ymm14
    1ae1:	c4 43 fd 00 f6 00    	vpermq $0x0,%ymm14,%ymm14
    1ae7:	c5 15 ef e8          	vpxor  %ymm0,%ymm13,%ymm13
    1aeb:	c5 15 ef ef          	vpxor  %ymm7,%ymm13,%ymm13
    1aef:	c4 c1 45 73 d5 3f    	vpsrlq $0x3f,%ymm13,%ymm7
    1af5:	c4 41 15 d4 c5       	vpaddq %ymm13,%ymm13,%ymm8
    1afa:	c5 3d eb c7          	vpor   %ymm7,%ymm8,%ymm8
    1afe:	c4 c1 6d ef d6       	vpxor  %ymm14,%ymm2,%ymm2
    1b03:	c4 c1 7d ef c6       	vpxor  %ymm14,%ymm0,%ymm0
    1b08:	c4 43 05 02 f8 c0    	vpblendd $0xc0,%ymm8,%ymm15,%ymm15
    1b0e:	c4 43 25 02 dd 03    	vpblendd $0x3,%ymm13,%ymm11,%ymm11
    1b14:	c4 41 05 ef fb       	vpxor  %ymm11,%ymm15,%ymm15
    1b19:	c4 42 ed 47 50 a0    	vpsllvq -0x60(%r8),%ymm2,%ymm10
    1b1f:	c4 c2 ed 45 51 a0    	vpsrlvq -0x60(%r9),%ymm2,%ymm2
    1b25:	c4 c1 6d eb d2       	vpor   %ymm10,%ymm2,%ymm2
    1b2a:	c4 c1 65 ef df       	vpxor  %ymm15,%ymm3,%ymm3
    1b2f:	c4 42 e5 47 58 e0    	vpsllvq -0x20(%r8),%ymm3,%ymm11
    1b35:	c4 c2 e5 45 59 e0    	vpsrlvq -0x20(%r9),%ymm3,%ymm3
    1b3b:	c4 c1 65 eb db       	vpor   %ymm11,%ymm3,%ymm3
    1b40:	c4 c1 5d ef e7       	vpxor  %ymm15,%ymm4,%ymm4
    1b45:	c4 42 dd 47 20       	vpsllvq (%r8),%ymm4,%ymm12
    1b4a:	c4 c2 dd 45 21       	vpsrlvq (%r9),%ymm4,%ymm4
    1b4f:	c4 c1 5d eb e4       	vpor   %ymm12,%ymm4,%ymm4
    1b54:	c4 c1 55 ef ef       	vpxor  %ymm15,%ymm5,%ymm5
    1b59:	c4 42 d5 47 68 20    	vpsllvq 0x20(%r8),%ymm5,%ymm13
    1b5f:	c4 c2 d5 45 69 20    	vpsrlvq 0x20(%r9),%ymm5,%ymm5
    1b65:	c4 c1 55 eb ed       	vpor   %ymm13,%ymm5,%ymm5
    1b6a:	c4 c1 4d ef f7       	vpxor  %ymm15,%ymm6,%ymm6
    1b6f:	c4 63 fd 00 d2 8d    	vpermq $0x8d,%ymm2,%ymm10
    1b75:	c4 63 fd 00 db 8d    	vpermq $0x8d,%ymm3,%ymm11
    1b7b:	c4 42 cd 47 70 40    	vpsllvq 0x40(%r8),%ymm6,%ymm14
    1b81:	c4 42 cd 45 41 40    	vpsrlvq 0x40(%r9),%ymm6,%ymm8
    1b87:	c4 41 3d eb c6       	vpor   %ymm14,%ymm8,%ymm8
    1b8c:	c4 c1 75 ef cf       	vpxor  %ymm15,%ymm1,%ymm1
    1b91:	c4 63 fd 00 e4 1b    	vpermq $0x1b,%ymm4,%ymm12
    1b97:	c4 63 fd 00 ed 72    	vpermq $0x72,%ymm5,%ymm13
    1b9d:	c4 42 f5 47 78 c0    	vpsllvq -0x40(%r8),%ymm1,%ymm15
    1ba3:	c4 42 f5 45 49 c0    	vpsrlvq -0x40(%r9),%ymm1,%ymm9
    1ba9:	c4 41 35 eb cf       	vpor   %ymm15,%ymm9,%ymm9
    1bae:	c4 c1 0d 73 d8 08    	vpsrldq $0x8,%ymm8,%ymm14
    1bb4:	c4 c1 3d df fe       	vpandn %ymm14,%ymm8,%ymm7
    1bb9:	c4 c3 35 02 dd 0c    	vpblendd $0xc,%ymm13,%ymm9,%ymm3
    1bbf:	c4 43 25 02 f9 0c    	vpblendd $0xc,%ymm9,%ymm11,%ymm15
    1bc5:	c4 c3 2d 02 eb 0c    	vpblendd $0xc,%ymm11,%ymm10,%ymm5
    1bcb:	c4 43 35 02 f2 0c    	vpblendd $0xc,%ymm10,%ymm9,%ymm14
    1bd1:	c4 c3 65 02 db 30    	vpblendd $0x30,%ymm11,%ymm3,%ymm3
    1bd7:	c4 43 05 02 fc 30    	vpblendd $0x30,%ymm12,%ymm15,%ymm15
    1bdd:	c4 c3 55 02 e9 30    	vpblendd $0x30,%ymm9,%ymm5,%ymm5
    1be3:	c4 43 0d 02 f5 30    	vpblendd $0x30,%ymm13,%ymm14,%ymm14
    1be9:	c4 c3 65 02 dc c0    	vpblendd $0xc0,%ymm12,%ymm3,%ymm3
    1bef:	c4 43 05 02 fd c0    	vpblendd $0xc0,%ymm13,%ymm15,%ymm15
    1bf5:	c4 c3 55 02 ed c0    	vpblendd $0xc0,%ymm13,%ymm5,%ymm5
    1bfb:	c4 43 0d 02 f3 c0    	vpblendd $0xc0,%ymm11,%ymm14,%ymm14
    1c01:	c4 c1 65 df df       	vpandn %ymm15,%ymm3,%ymm3
    1c06:	c4 c1 55 df ee       	vpandn %ymm14,%ymm5,%ymm5
    1c0b:	c4 c3 1d 02 f1 0c    	vpblendd $0xc,%ymm9,%ymm12,%ymm6
    1c11:	c4 43 2d 02 fc 0c    	vpblendd $0xc,%ymm12,%ymm10,%ymm15
    1c17:	c4 c1 65 ef da       	vpxor  %ymm10,%ymm3,%ymm3
    1c1c:	c4 c3 4d 02 f2 30    	vpblendd $0x30,%ymm10,%ymm6,%ymm6
    1c22:	c4 43 05 02 fb 30    	vpblendd $0x30,%ymm11,%ymm15,%ymm15
    1c28:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
    1c2d:	c4 c3 4d 02 f3 c0    	vpblendd $0xc0,%ymm11,%ymm6,%ymm6
    1c33:	c4 43 05 02 f9 c0    	vpblendd $0xc0,%ymm9,%ymm15,%ymm15
    1c39:	c4 c1 4d df f7       	vpandn %ymm15,%ymm6,%ymm6
    1c3e:	c4 c1 4d ef f5       	vpxor  %ymm13,%ymm6,%ymm6
    1c43:	c4 c3 fd 00 e0 1e    	vpermq $0x1e,%ymm8,%ymm4
    1c49:	c4 63 5d 02 f8 30    	vpblendd $0x30,%ymm0,%ymm4,%ymm15
    1c4f:	c4 c3 fd 00 c8 39    	vpermq $0x39,%ymm8,%ymm1
    1c55:	c4 e3 75 02 c8 c0    	vpblendd $0xc0,%ymm0,%ymm1,%ymm1
    1c5b:	c4 c1 75 df cf       	vpandn %ymm15,%ymm1,%ymm1
    1c60:	c4 c3 25 02 d4 0c    	vpblendd $0xc,%ymm12,%ymm11,%ymm2
    1c66:	c4 43 15 02 f3 0c    	vpblendd $0xc,%ymm11,%ymm13,%ymm14
    1c6c:	c4 c3 6d 02 d5 30    	vpblendd $0x30,%ymm13,%ymm2,%ymm2
    1c72:	c4 43 0d 02 f2 30    	vpblendd $0x30,%ymm10,%ymm14,%ymm14
    1c78:	c4 c3 6d 02 d2 c0    	vpblendd $0xc0,%ymm10,%ymm2,%ymm2
    1c7e:	c4 43 0d 02 f4 c0    	vpblendd $0xc0,%ymm12,%ymm14,%ymm14
    1c84:	c4 c1 6d df d6       	vpandn %ymm14,%ymm2,%ymm2
    1c89:	c4 c1 6d ef d1       	vpxor  %ymm9,%ymm2,%ymm2
    1c8e:	c4 e3 fd 00 ff 00    	vpermq $0x0,%ymm7,%ymm7
    1c94:	c4 e3 fd 00 db 1b    	vpermq $0x1b,%ymm3,%ymm3
    1c9a:	c4 e3 fd 00 ed 8d    	vpermq $0x8d,%ymm5,%ymm5
    1ca0:	c4 e3 fd 00 f6 72    	vpermq $0x72,%ymm6,%ymm6
    1ca6:	c4 c3 15 02 e2 0c    	vpblendd $0xc,%ymm10,%ymm13,%ymm4
    1cac:	c4 43 1d 02 f5 0c    	vpblendd $0xc,%ymm13,%ymm12,%ymm14
    1cb2:	c4 c3 5d 02 e4 30    	vpblendd $0x30,%ymm12,%ymm4,%ymm4
    1cb8:	c4 43 0d 02 f1 30    	vpblendd $0x30,%ymm9,%ymm14,%ymm14
    1cbe:	c4 c3 5d 02 e1 c0    	vpblendd $0xc0,%ymm9,%ymm4,%ymm4
    1cc4:	c4 43 0d 02 f2 c0    	vpblendd $0xc0,%ymm10,%ymm14,%ymm14
    1cca:	c4 c1 5d df e6       	vpandn %ymm14,%ymm4,%ymm4
    1ccf:	c5 fd ef c7          	vpxor  %ymm7,%ymm0,%ymm0
    1cd3:	c4 c1 75 ef c8       	vpxor  %ymm8,%ymm1,%ymm1
    1cd8:	c4 c1 5d ef e3       	vpxor  %ymm11,%ymm4,%ymm4
    1cdd:	c4 c1 7d ef 02       	vpxor  (%r10),%ymm0,%ymm0
    1ce2:	4d 8d 52 20          	lea    0x20(%r10),%r10
    1ce6:	ff c8                	dec    %eax
    1ce8:	0f 85 b2 fd ff ff    	jne    1aa0 <__KeccakF1600>
    1cee:	c3                   	ret    

0000000000001cef <KeccakP1600_Permute_24rounds>:
    1cef:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1cf6:	00 00 00 00 
    1cfa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1d00:	4c 8d 05 99 1b 00 00 	lea    0x1b99(%rip),%r8        # 38a0 <rhotates_left+0x60>
    1d07:	4c 8d 0d 52 1c 00 00 	lea    0x1c52(%rip),%r9        # 3960 <rhotates_right+0x60>
    1d0e:	4c 8d 15 ab 1c 00 00 	lea    0x1cab(%rip),%r10        # 39c0 <iotas>
    1d15:	b8 18 00 00 00       	mov    $0x18,%eax
    1d1a:	48 8d 7f 60          	lea    0x60(%rdi),%rdi
    1d1e:	c5 f8 77             	vzeroupper 
    1d21:	c4 e2 7d 59 47 a0    	vpbroadcastq -0x60(%rdi),%ymm0
    1d27:	c5 fe 6f 4f a8       	vmovdqu -0x58(%rdi),%ymm1
    1d2c:	c5 fe 6f 57 c8       	vmovdqu -0x38(%rdi),%ymm2
    1d31:	c5 fe 6f 5f e8       	vmovdqu -0x18(%rdi),%ymm3
    1d36:	c5 fe 6f 67 08       	vmovdqu 0x8(%rdi),%ymm4
    1d3b:	c5 fe 6f 6f 28       	vmovdqu 0x28(%rdi),%ymm5
    1d40:	c5 fe 6f 77 48       	vmovdqu 0x48(%rdi),%ymm6
    1d45:	e8 56 fd ff ff       	call   1aa0 <__KeccakF1600>
    1d4a:	c5 f9 d6 47 a0       	vmovq  %xmm0,-0x60(%rdi)
    1d4f:	c5 fe 7f 4f a8       	vmovdqu %ymm1,-0x58(%rdi)
    1d54:	c5 fe 7f 57 c8       	vmovdqu %ymm2,-0x38(%rdi)
    1d59:	c5 fe 7f 5f e8       	vmovdqu %ymm3,-0x18(%rdi)
    1d5e:	c5 fe 7f 67 08       	vmovdqu %ymm4,0x8(%rdi)
    1d63:	c5 fe 7f 6f 28       	vmovdqu %ymm5,0x28(%rdi)
    1d68:	c5 fe 7f 77 48       	vmovdqu %ymm6,0x48(%rdi)
    1d6d:	c5 f8 77             	vzeroupper 
    1d70:	c3                   	ret    

0000000000001d71 <KeccakP1600_Permute_12rounds>:
    1d71:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1d78:	00 00 00 00 
    1d7c:	0f 1f 40 00          	nopl   0x0(%rax)
    1d80:	4c 8d 05 19 1b 00 00 	lea    0x1b19(%rip),%r8        # 38a0 <rhotates_left+0x60>
    1d87:	4c 8d 0d d2 1b 00 00 	lea    0x1bd2(%rip),%r9        # 3960 <rhotates_right+0x60>
    1d8e:	4c 8d 15 ab 1d 00 00 	lea    0x1dab(%rip),%r10        # 3b40 <iotas+0x180>
    1d95:	b8 0c 00 00 00       	mov    $0xc,%eax
    1d9a:	48 8d 7f 60          	lea    0x60(%rdi),%rdi
    1d9e:	c5 f8 77             	vzeroupper 
    1da1:	c4 e2 7d 59 47 a0    	vpbroadcastq -0x60(%rdi),%ymm0
    1da7:	c5 fe 6f 4f a8       	vmovdqu -0x58(%rdi),%ymm1
    1dac:	c5 fe 6f 57 c8       	vmovdqu -0x38(%rdi),%ymm2
    1db1:	c5 fe 6f 5f e8       	vmovdqu -0x18(%rdi),%ymm3
    1db6:	c5 fe 6f 67 08       	vmovdqu 0x8(%rdi),%ymm4
    1dbb:	c5 fe 6f 6f 28       	vmovdqu 0x28(%rdi),%ymm5
    1dc0:	c5 fe 6f 77 48       	vmovdqu 0x48(%rdi),%ymm6
    1dc5:	e8 d6 fc ff ff       	call   1aa0 <__KeccakF1600>
    1dca:	c5 f9 d6 47 a0       	vmovq  %xmm0,-0x60(%rdi)
    1dcf:	c5 fe 7f 4f a8       	vmovdqu %ymm1,-0x58(%rdi)
    1dd4:	c5 fe 7f 57 c8       	vmovdqu %ymm2,-0x38(%rdi)
    1dd9:	c5 fe 7f 5f e8       	vmovdqu %ymm3,-0x18(%rdi)
    1dde:	c5 fe 7f 67 08       	vmovdqu %ymm4,0x8(%rdi)
    1de3:	c5 fe 7f 6f 28       	vmovdqu %ymm5,0x28(%rdi)
    1de8:	c5 fe 7f 77 48       	vmovdqu %ymm6,0x48(%rdi)
    1ded:	c5 f8 77             	vzeroupper 
    1df0:	c3                   	ret    

0000000000001df1 <KeccakP1600_Permute_Nrounds>:
    1df1:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1df8:	00 00 00 00 
    1dfc:	0f 1f 40 00          	nopl   0x0(%rax)
    1e00:	4c 8d 05 99 1a 00 00 	lea    0x1a99(%rip),%r8        # 38a0 <rhotates_left+0x60>
    1e07:	4c 8d 0d 52 1b 00 00 	lea    0x1b52(%rip),%r9        # 3960 <rhotates_right+0x60>
    1e0e:	4c 8d 15 ab 1e 00 00 	lea    0x1eab(%rip),%r10        # 3cc0 <mapState>
    1e15:	48 89 f0             	mov    %rsi,%rax
    1e18:	48 c1 e6 05          	shl    $0x5,%rsi
    1e1c:	49 29 f2             	sub    %rsi,%r10
    1e1f:	48 8d 7f 60          	lea    0x60(%rdi),%rdi
    1e23:	c5 f8 77             	vzeroupper 
    1e26:	c4 e2 7d 59 47 a0    	vpbroadcastq -0x60(%rdi),%ymm0
    1e2c:	c5 fe 6f 4f a8       	vmovdqu -0x58(%rdi),%ymm1
    1e31:	c5 fe 6f 57 c8       	vmovdqu -0x38(%rdi),%ymm2
    1e36:	c5 fe 6f 5f e8       	vmovdqu -0x18(%rdi),%ymm3
    1e3b:	c5 fe 6f 67 08       	vmovdqu 0x8(%rdi),%ymm4
    1e40:	c5 fe 6f 6f 28       	vmovdqu 0x28(%rdi),%ymm5
    1e45:	c5 fe 6f 77 48       	vmovdqu 0x48(%rdi),%ymm6
    1e4a:	e8 51 fc ff ff       	call   1aa0 <__KeccakF1600>
    1e4f:	c5 f9 d6 47 a0       	vmovq  %xmm0,-0x60(%rdi)
    1e54:	c5 fe 7f 4f a8       	vmovdqu %ymm1,-0x58(%rdi)
    1e59:	c5 fe 7f 57 c8       	vmovdqu %ymm2,-0x38(%rdi)
    1e5e:	c5 fe 7f 5f e8       	vmovdqu %ymm3,-0x18(%rdi)
    1e63:	c5 fe 7f 67 08       	vmovdqu %ymm4,0x8(%rdi)
    1e68:	c5 fe 7f 6f 28       	vmovdqu %ymm5,0x28(%rdi)
    1e6d:	c5 fe 7f 77 48       	vmovdqu %ymm6,0x48(%rdi)
    1e72:	c5 f8 77             	vzeroupper 
    1e75:	c3                   	ret    

0000000000001e76 <KeccakF1600_FastLoop_Absorb>:
    1e76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1e7d:	00 00 00 
    1e80:	53                   	push   %rbx
    1e81:	41 52                	push   %r10
    1e83:	48 c1 e9 03          	shr    $0x3,%rcx
    1e87:	48 89 d3             	mov    %rdx,%rbx
    1e8a:	48 39 f1             	cmp    %rsi,%rcx
    1e8d:	0f 82 37 01 00 00    	jb     1fca <KeccakF1600_FastLoop_Absorb_Exit>
    1e93:	c5 f8 77             	vzeroupper 
    1e96:	48 83 fe 15          	cmp    $0x15,%rsi
    1e9a:	0f 85 37 01 00 00    	jne    1fd7 <KeccakF1600_FastLoop_Absorb_Not21Lanes>
    1ea0:	48 83 e9 15          	sub    $0x15,%rcx
    1ea4:	4c 8d 05 f5 19 00 00 	lea    0x19f5(%rip),%r8        # 38a0 <rhotates_left+0x60>
    1eab:	4c 8d 0d ae 1a 00 00 	lea    0x1aae(%rip),%r9        # 3960 <rhotates_right+0x60>
    1eb2:	48 8d 7f 60          	lea    0x60(%rdi),%rdi
    1eb6:	c4 e2 7d 59 47 a0    	vpbroadcastq -0x60(%rdi),%ymm0
    1ebc:	c5 fe 6f 4f a8       	vmovdqu -0x58(%rdi),%ymm1
    1ec1:	c5 fe 6f 57 c8       	vmovdqu -0x38(%rdi),%ymm2
    1ec6:	c5 fe 6f 5f e8       	vmovdqu -0x18(%rdi),%ymm3
    1ecb:	c5 fe 6f 67 08       	vmovdqu 0x8(%rdi),%ymm4
    1ed0:	c5 fe 6f 6f 28       	vmovdqu 0x28(%rdi),%ymm5
    1ed5:	c5 fe 6f 77 48       	vmovdqu 0x48(%rdi),%ymm6

0000000000001eda <KeccakF1600_FastLoop_Absorb_Loop21Lanes>:
    1eda:	c4 e2 7d 59 3a       	vpbroadcastq (%rdx),%ymm7
    1edf:	c5 7e 6f 42 08       	vmovdqu 0x8(%rdx),%ymm8
    1ee4:	c5 79 6f 3d a4 1e 00 	vmovdqa 0x1ea4(%rip),%xmm15        # 3d90 <map2>
    1eeb:	00 
    1eec:	c4 41 0d 76 f6       	vpcmpeqd %ymm14,%ymm14,%ymm14
    1ef1:	c4 22 8d 90 0c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm9
    1ef7:	c5 7d 6f 35 e1 1e 00 	vmovdqa 0x1ee1(%rip),%ymm14        # 3de0 <mask3_21>
    1efe:	00 
    1eff:	c4 41 2d ef d2       	vpxor  %ymm10,%ymm10,%ymm10
    1f04:	c5 79 6f 3d 94 1e 00 	vmovdqa 0x1e94(%rip),%xmm15        # 3da0 <map3>
    1f0b:	00 
    1f0c:	c4 22 8d 90 14 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm10
    1f12:	c5 7d 6f 35 e6 1e 00 	vmovdqa 0x1ee6(%rip),%ymm14        # 3e00 <mask4_21>
    1f19:	00 
    1f1a:	c4 41 25 ef db       	vpxor  %ymm11,%ymm11,%ymm11
    1f1f:	c5 79 6f 3d 89 1e 00 	vmovdqa 0x1e89(%rip),%xmm15        # 3db0 <map4>
    1f26:	00 
    1f27:	c4 22 8d 90 1c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm11
    1f2d:	c5 7d 6f 35 eb 1e 00 	vmovdqa 0x1eeb(%rip),%ymm14        # 3e20 <mask5_21>
    1f34:	00 
    1f35:	c4 41 1d ef e4       	vpxor  %ymm12,%ymm12,%ymm12
    1f3a:	c5 79 6f 3d 7e 1e 00 	vmovdqa 0x1e7e(%rip),%xmm15        # 3dc0 <map5>
    1f41:	00 
    1f42:	c4 22 8d 90 24 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm12
    1f48:	c5 7d 6f 35 f0 1e 00 	vmovdqa 0x1ef0(%rip),%ymm14        # 3e40 <mask6_21>
    1f4f:	00 
    1f50:	c4 41 15 ef ed       	vpxor  %ymm13,%ymm13,%ymm13
    1f55:	c5 79 6f 3d 73 1e 00 	vmovdqa 0x1e73(%rip),%xmm15        # 3dd0 <map6>
    1f5c:	00 
    1f5d:	c4 22 8d 90 2c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm13
    1f63:	c5 fd ef c7          	vpxor  %ymm7,%ymm0,%ymm0
    1f67:	c4 c1 75 ef c8       	vpxor  %ymm8,%ymm1,%ymm1
    1f6c:	c4 c1 6d ef d1       	vpxor  %ymm9,%ymm2,%ymm2
    1f71:	c4 c1 65 ef da       	vpxor  %ymm10,%ymm3,%ymm3
    1f76:	c4 c1 5d ef e3       	vpxor  %ymm11,%ymm4,%ymm4
    1f7b:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
    1f80:	c4 c1 4d ef f5       	vpxor  %ymm13,%ymm6,%ymm6
    1f85:	48 81 c2 a8 00 00 00 	add    $0xa8,%rdx
    1f8c:	4c 8d 15 2d 1a 00 00 	lea    0x1a2d(%rip),%r10        # 39c0 <iotas>
    1f93:	b8 18 00 00 00       	mov    $0x18,%eax
    1f98:	e8 03 fb ff ff       	call   1aa0 <__KeccakF1600>
    1f9d:	48 83 e9 15          	sub    $0x15,%rcx
    1fa1:	0f 83 33 ff ff ff    	jae    1eda <KeccakF1600_FastLoop_Absorb_Loop21Lanes>

0000000000001fa7 <KeccakF1600_FastLoop_Absorb_SaveAndExit>:
    1fa7:	c5 f9 d6 47 a0       	vmovq  %xmm0,-0x60(%rdi)
    1fac:	c5 fe 7f 4f a8       	vmovdqu %ymm1,-0x58(%rdi)
    1fb1:	c5 fe 7f 57 c8       	vmovdqu %ymm2,-0x38(%rdi)
    1fb6:	c5 fe 7f 5f e8       	vmovdqu %ymm3,-0x18(%rdi)
    1fbb:	c5 fe 7f 67 08       	vmovdqu %ymm4,0x8(%rdi)
    1fc0:	c5 fe 7f 6f 28       	vmovdqu %ymm5,0x28(%rdi)
    1fc5:	c5 fe 7f 77 48       	vmovdqu %ymm6,0x48(%rdi)

0000000000001fca <KeccakF1600_FastLoop_Absorb_Exit>:
    1fca:	c5 f8 77             	vzeroupper 
    1fcd:	48 89 d0             	mov    %rdx,%rax
    1fd0:	48 29 d8             	sub    %rbx,%rax
    1fd3:	41 5a                	pop    %r10
    1fd5:	5b                   	pop    %rbx
    1fd6:	c3                   	ret    

0000000000001fd7 <KeccakF1600_FastLoop_Absorb_Not21Lanes>:
    1fd7:	48 83 fe 11          	cmp    $0x11,%rsi
    1fdb:	0f 85 14 01 00 00    	jne    20f5 <KeccakF1600_FastLoop_Absorb_Not17Lanes>
    1fe1:	48 83 e9 11          	sub    $0x11,%rcx
    1fe5:	4c 8d 05 b4 18 00 00 	lea    0x18b4(%rip),%r8        # 38a0 <rhotates_left+0x60>
    1fec:	4c 8d 0d 6d 19 00 00 	lea    0x196d(%rip),%r9        # 3960 <rhotates_right+0x60>
    1ff3:	48 8d 7f 60          	lea    0x60(%rdi),%rdi
    1ff7:	c4 e2 7d 59 47 a0    	vpbroadcastq -0x60(%rdi),%ymm0
    1ffd:	c5 fe 6f 4f a8       	vmovdqu -0x58(%rdi),%ymm1
    2002:	c5 fe 6f 57 c8       	vmovdqu -0x38(%rdi),%ymm2
    2007:	c5 fe 6f 5f e8       	vmovdqu -0x18(%rdi),%ymm3
    200c:	c5 fe 6f 67 08       	vmovdqu 0x8(%rdi),%ymm4
    2011:	c5 fe 6f 6f 28       	vmovdqu 0x28(%rdi),%ymm5
    2016:	c5 fe 6f 77 48       	vmovdqu 0x48(%rdi),%ymm6

000000000000201b <KeccakF1600_FastLoop_Absorb_Loop17Lanes>:
    201b:	c4 e2 7d 59 3a       	vpbroadcastq (%rdx),%ymm7
    2020:	c5 7e 6f 42 08       	vmovdqu 0x8(%rdx),%ymm8
    2025:	c5 7d 6f 35 33 1e 00 	vmovdqa 0x1e33(%rip),%ymm14        # 3e60 <mask2_17>
    202c:	00 
    202d:	c4 41 35 ef c9       	vpxor  %ymm9,%ymm9,%ymm9
    2032:	c5 79 6f 3d 56 1d 00 	vmovdqa 0x1d56(%rip),%xmm15        # 3d90 <map2>
    2039:	00 
    203a:	c4 22 8d 90 0c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm9
    2040:	c5 7d 6f 35 38 1e 00 	vmovdqa 0x1e38(%rip),%ymm14        # 3e80 <mask3_17>
    2047:	00 
    2048:	c4 41 2d ef d2       	vpxor  %ymm10,%ymm10,%ymm10
    204d:	c5 79 6f 3d 4b 1d 00 	vmovdqa 0x1d4b(%rip),%xmm15        # 3da0 <map3>
    2054:	00 
    2055:	c4 22 8d 90 14 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm10
    205b:	c5 7d 6f 35 3d 1e 00 	vmovdqa 0x1e3d(%rip),%ymm14        # 3ea0 <mask4_17>
    2062:	00 
    2063:	c4 41 25 ef db       	vpxor  %ymm11,%ymm11,%ymm11
    2068:	c5 79 6f 3d 40 1d 00 	vmovdqa 0x1d40(%rip),%xmm15        # 3db0 <map4>
    206f:	00 
    2070:	c4 22 8d 90 1c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm11
    2076:	c5 7d 6f 35 42 1e 00 	vmovdqa 0x1e42(%rip),%ymm14        # 3ec0 <mask5_17>
    207d:	00 
    207e:	c4 41 1d ef e4       	vpxor  %ymm12,%ymm12,%ymm12
    2083:	c5 79 6f 3d 35 1d 00 	vmovdqa 0x1d35(%rip),%xmm15        # 3dc0 <map5>
    208a:	00 
    208b:	c4 22 8d 90 24 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm12
    2091:	c5 7d 6f 35 47 1e 00 	vmovdqa 0x1e47(%rip),%ymm14        # 3ee0 <mask6_17>
    2098:	00 
    2099:	c4 41 15 ef ed       	vpxor  %ymm13,%ymm13,%ymm13
    209e:	c5 79 6f 3d 2a 1d 00 	vmovdqa 0x1d2a(%rip),%xmm15        # 3dd0 <map6>
    20a5:	00 
    20a6:	c4 22 8d 90 2c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm13
    20ac:	c5 fd ef c7          	vpxor  %ymm7,%ymm0,%ymm0
    20b0:	c4 c1 75 ef c8       	vpxor  %ymm8,%ymm1,%ymm1
    20b5:	c4 c1 6d ef d1       	vpxor  %ymm9,%ymm2,%ymm2
    20ba:	c4 c1 65 ef da       	vpxor  %ymm10,%ymm3,%ymm3
    20bf:	c4 c1 5d ef e3       	vpxor  %ymm11,%ymm4,%ymm4
    20c4:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
    20c9:	c4 c1 4d ef f5       	vpxor  %ymm13,%ymm6,%ymm6
    20ce:	48 81 c2 88 00 00 00 	add    $0x88,%rdx
    20d5:	4c 8d 15 e4 18 00 00 	lea    0x18e4(%rip),%r10        # 39c0 <iotas>
    20dc:	b8 18 00 00 00       	mov    $0x18,%eax
    20e1:	e8 ba f9 ff ff       	call   1aa0 <__KeccakF1600>
    20e6:	48 83 e9 11          	sub    $0x11,%rcx
    20ea:	0f 83 2b ff ff ff    	jae    201b <KeccakF1600_FastLoop_Absorb_Loop17Lanes>
    20f0:	e9 b2 fe ff ff       	jmp    1fa7 <KeccakF1600_FastLoop_Absorb_SaveAndExit>

00000000000020f5 <KeccakF1600_FastLoop_Absorb_Not17Lanes>:
    20f5:	4c 8d 0d c4 1b 00 00 	lea    0x1bc4(%rip),%r9        # 3cc0 <mapState>
    20fc:	48 89 f0             	mov    %rsi,%rax

00000000000020ff <KeccakF1600_FastLoop_Absorb_LanesAddLoop>:
    20ff:	4c 8b 02             	mov    (%rdx),%r8
    2102:	48 83 c2 08          	add    $0x8,%rdx
    2106:	4d 8b 11             	mov    (%r9),%r10
    2109:	49 83 c1 08          	add    $0x8,%r9
    210d:	49 01 fa             	add    %rdi,%r10
    2110:	4d 31 02             	xor    %r8,(%r10)
    2113:	48 83 e8 01          	sub    $0x1,%rax
    2117:	75 e6                	jne    20ff <KeccakF1600_FastLoop_Absorb_LanesAddLoop>
    2119:	48 29 f1             	sub    %rsi,%rcx
    211c:	57                   	push   %rdi
    211d:	56                   	push   %rsi
    211e:	52                   	push   %rdx
    211f:	51                   	push   %rcx
    2120:	e8 ca fb ff ff       	call   1cef <KeccakP1600_Permute_24rounds>
    2125:	59                   	pop    %rcx
    2126:	5a                   	pop    %rdx
    2127:	5e                   	pop    %rsi
    2128:	5f                   	pop    %rdi
    2129:	48 39 f1             	cmp    %rsi,%rcx
    212c:	73 c7                	jae    20f5 <KeccakF1600_FastLoop_Absorb_Not17Lanes>
    212e:	e9 97 fe ff ff       	jmp    1fca <KeccakF1600_FastLoop_Absorb_Exit>

0000000000002133 <KeccakP1600_12rounds_FastLoop_Absorb>:
    2133:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    213a:	00 00 00 00 
    213e:	66 90                	xchg   %ax,%ax
    2140:	53                   	push   %rbx
    2141:	41 52                	push   %r10
    2143:	48 c1 e9 03          	shr    $0x3,%rcx
    2147:	48 89 d3             	mov    %rdx,%rbx
    214a:	48 39 f1             	cmp    %rsi,%rcx
    214d:	0f 82 37 01 00 00    	jb     228a <KeccakP1600_12rounds_FastLoop_Absorb_Exit>
    2153:	c5 f8 77             	vzeroupper 
    2156:	48 83 fe 15          	cmp    $0x15,%rsi
    215a:	0f 85 37 01 00 00    	jne    2297 <KeccakP1600_12rounds_FastLoop_Absorb_Not21Lanes>
    2160:	48 83 e9 15          	sub    $0x15,%rcx
    2164:	4c 8d 05 35 17 00 00 	lea    0x1735(%rip),%r8        # 38a0 <rhotates_left+0x60>
    216b:	4c 8d 0d ee 17 00 00 	lea    0x17ee(%rip),%r9        # 3960 <rhotates_right+0x60>
    2172:	48 8d 7f 60          	lea    0x60(%rdi),%rdi
    2176:	c4 e2 7d 59 47 a0    	vpbroadcastq -0x60(%rdi),%ymm0
    217c:	c5 fe 6f 4f a8       	vmovdqu -0x58(%rdi),%ymm1
    2181:	c5 fe 6f 57 c8       	vmovdqu -0x38(%rdi),%ymm2
    2186:	c5 fe 6f 5f e8       	vmovdqu -0x18(%rdi),%ymm3
    218b:	c5 fe 6f 67 08       	vmovdqu 0x8(%rdi),%ymm4
    2190:	c5 fe 6f 6f 28       	vmovdqu 0x28(%rdi),%ymm5
    2195:	c5 fe 6f 77 48       	vmovdqu 0x48(%rdi),%ymm6

000000000000219a <KeccakP1600_12rounds_FastLoop_Absorb_Loop21Lanes>:
    219a:	c4 e2 7d 59 3a       	vpbroadcastq (%rdx),%ymm7
    219f:	c5 7e 6f 42 08       	vmovdqu 0x8(%rdx),%ymm8
    21a4:	c5 79 6f 3d e4 1b 00 	vmovdqa 0x1be4(%rip),%xmm15        # 3d90 <map2>
    21ab:	00 
    21ac:	c4 41 0d 76 f6       	vpcmpeqd %ymm14,%ymm14,%ymm14
    21b1:	c4 22 8d 90 0c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm9
    21b7:	c5 7d 6f 35 21 1c 00 	vmovdqa 0x1c21(%rip),%ymm14        # 3de0 <mask3_21>
    21be:	00 
    21bf:	c4 41 2d ef d2       	vpxor  %ymm10,%ymm10,%ymm10
    21c4:	c5 79 6f 3d d4 1b 00 	vmovdqa 0x1bd4(%rip),%xmm15        # 3da0 <map3>
    21cb:	00 
    21cc:	c4 22 8d 90 14 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm10
    21d2:	c5 7d 6f 35 26 1c 00 	vmovdqa 0x1c26(%rip),%ymm14        # 3e00 <mask4_21>
    21d9:	00 
    21da:	c4 41 25 ef db       	vpxor  %ymm11,%ymm11,%ymm11
    21df:	c5 79 6f 3d c9 1b 00 	vmovdqa 0x1bc9(%rip),%xmm15        # 3db0 <map4>
    21e6:	00 
    21e7:	c4 22 8d 90 1c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm11
    21ed:	c5 7d 6f 35 2b 1c 00 	vmovdqa 0x1c2b(%rip),%ymm14        # 3e20 <mask5_21>
    21f4:	00 
    21f5:	c4 41 1d ef e4       	vpxor  %ymm12,%ymm12,%ymm12
    21fa:	c5 79 6f 3d be 1b 00 	vmovdqa 0x1bbe(%rip),%xmm15        # 3dc0 <map5>
    2201:	00 
    2202:	c4 22 8d 90 24 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm12
    2208:	c5 7d 6f 35 30 1c 00 	vmovdqa 0x1c30(%rip),%ymm14        # 3e40 <mask6_21>
    220f:	00 
    2210:	c4 41 15 ef ed       	vpxor  %ymm13,%ymm13,%ymm13
    2215:	c5 79 6f 3d b3 1b 00 	vmovdqa 0x1bb3(%rip),%xmm15        # 3dd0 <map6>
    221c:	00 
    221d:	c4 22 8d 90 2c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm13
    2223:	c5 fd ef c7          	vpxor  %ymm7,%ymm0,%ymm0
    2227:	c4 c1 75 ef c8       	vpxor  %ymm8,%ymm1,%ymm1
    222c:	c4 c1 6d ef d1       	vpxor  %ymm9,%ymm2,%ymm2
    2231:	c4 c1 65 ef da       	vpxor  %ymm10,%ymm3,%ymm3
    2236:	c4 c1 5d ef e3       	vpxor  %ymm11,%ymm4,%ymm4
    223b:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
    2240:	c4 c1 4d ef f5       	vpxor  %ymm13,%ymm6,%ymm6
    2245:	48 81 c2 a8 00 00 00 	add    $0xa8,%rdx
    224c:	4c 8d 15 ed 18 00 00 	lea    0x18ed(%rip),%r10        # 3b40 <iotas+0x180>
    2253:	b8 0c 00 00 00       	mov    $0xc,%eax
    2258:	e8 43 f8 ff ff       	call   1aa0 <__KeccakF1600>
    225d:	48 83 e9 15          	sub    $0x15,%rcx
    2261:	0f 83 33 ff ff ff    	jae    219a <KeccakP1600_12rounds_FastLoop_Absorb_Loop21Lanes>

0000000000002267 <KeccakP1600_12rounds_FastLoop_Absorb_SaveAndExit>:
    2267:	c5 f9 d6 47 a0       	vmovq  %xmm0,-0x60(%rdi)
    226c:	c5 fe 7f 4f a8       	vmovdqu %ymm1,-0x58(%rdi)
    2271:	c5 fe 7f 57 c8       	vmovdqu %ymm2,-0x38(%rdi)
    2276:	c5 fe 7f 5f e8       	vmovdqu %ymm3,-0x18(%rdi)
    227b:	c5 fe 7f 67 08       	vmovdqu %ymm4,0x8(%rdi)
    2280:	c5 fe 7f 6f 28       	vmovdqu %ymm5,0x28(%rdi)
    2285:	c5 fe 7f 77 48       	vmovdqu %ymm6,0x48(%rdi)

000000000000228a <KeccakP1600_12rounds_FastLoop_Absorb_Exit>:
    228a:	c5 f8 77             	vzeroupper 
    228d:	48 89 d0             	mov    %rdx,%rax
    2290:	48 29 d8             	sub    %rbx,%rax
    2293:	41 5a                	pop    %r10
    2295:	5b                   	pop    %rbx
    2296:	c3                   	ret    

0000000000002297 <KeccakP1600_12rounds_FastLoop_Absorb_Not21Lanes>:
    2297:	48 83 fe 11          	cmp    $0x11,%rsi
    229b:	0f 85 14 01 00 00    	jne    23b5 <KeccakP1600_12rounds_FastLoop_Absorb_Not17Lanes>
    22a1:	48 83 e9 11          	sub    $0x11,%rcx
    22a5:	4c 8d 05 f4 15 00 00 	lea    0x15f4(%rip),%r8        # 38a0 <rhotates_left+0x60>
    22ac:	4c 8d 0d ad 16 00 00 	lea    0x16ad(%rip),%r9        # 3960 <rhotates_right+0x60>
    22b3:	48 8d 7f 60          	lea    0x60(%rdi),%rdi
    22b7:	c4 e2 7d 59 47 a0    	vpbroadcastq -0x60(%rdi),%ymm0
    22bd:	c5 fe 6f 4f a8       	vmovdqu -0x58(%rdi),%ymm1
    22c2:	c5 fe 6f 57 c8       	vmovdqu -0x38(%rdi),%ymm2
    22c7:	c5 fe 6f 5f e8       	vmovdqu -0x18(%rdi),%ymm3
    22cc:	c5 fe 6f 67 08       	vmovdqu 0x8(%rdi),%ymm4
    22d1:	c5 fe 6f 6f 28       	vmovdqu 0x28(%rdi),%ymm5
    22d6:	c5 fe 6f 77 48       	vmovdqu 0x48(%rdi),%ymm6

00000000000022db <KeccakP1600_12rounds_FastLoop_Absorb_Loop17Lanes>:
    22db:	c4 e2 7d 59 3a       	vpbroadcastq (%rdx),%ymm7
    22e0:	c5 7e 6f 42 08       	vmovdqu 0x8(%rdx),%ymm8
    22e5:	c5 7d 6f 35 73 1b 00 	vmovdqa 0x1b73(%rip),%ymm14        # 3e60 <mask2_17>
    22ec:	00 
    22ed:	c4 41 35 ef c9       	vpxor  %ymm9,%ymm9,%ymm9
    22f2:	c5 79 6f 3d 96 1a 00 	vmovdqa 0x1a96(%rip),%xmm15        # 3d90 <map2>
    22f9:	00 
    22fa:	c4 22 8d 90 0c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm9
    2300:	c5 7d 6f 35 78 1b 00 	vmovdqa 0x1b78(%rip),%ymm14        # 3e80 <mask3_17>
    2307:	00 
    2308:	c4 41 2d ef d2       	vpxor  %ymm10,%ymm10,%ymm10
    230d:	c5 79 6f 3d 8b 1a 00 	vmovdqa 0x1a8b(%rip),%xmm15        # 3da0 <map3>
    2314:	00 
    2315:	c4 22 8d 90 14 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm10
    231b:	c5 7d 6f 35 7d 1b 00 	vmovdqa 0x1b7d(%rip),%ymm14        # 3ea0 <mask4_17>
    2322:	00 
    2323:	c4 41 25 ef db       	vpxor  %ymm11,%ymm11,%ymm11
    2328:	c5 79 6f 3d 80 1a 00 	vmovdqa 0x1a80(%rip),%xmm15        # 3db0 <map4>
    232f:	00 
    2330:	c4 22 8d 90 1c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm11
    2336:	c5 7d 6f 35 82 1b 00 	vmovdqa 0x1b82(%rip),%ymm14        # 3ec0 <mask5_17>
    233d:	00 
    233e:	c4 41 1d ef e4       	vpxor  %ymm12,%ymm12,%ymm12
    2343:	c5 79 6f 3d 75 1a 00 	vmovdqa 0x1a75(%rip),%xmm15        # 3dc0 <map5>
    234a:	00 
    234b:	c4 22 8d 90 24 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm12
    2351:	c5 7d 6f 35 87 1b 00 	vmovdqa 0x1b87(%rip),%ymm14        # 3ee0 <mask6_17>
    2358:	00 
    2359:	c4 41 15 ef ed       	vpxor  %ymm13,%ymm13,%ymm13
    235e:	c5 79 6f 3d 6a 1a 00 	vmovdqa 0x1a6a(%rip),%xmm15        # 3dd0 <map6>
    2365:	00 
    2366:	c4 22 8d 90 2c 3a    	vpgatherdq %ymm14,(%rdx,%xmm15,1),%ymm13
    236c:	c5 fd ef c7          	vpxor  %ymm7,%ymm0,%ymm0
    2370:	c4 c1 75 ef c8       	vpxor  %ymm8,%ymm1,%ymm1
    2375:	c4 c1 6d ef d1       	vpxor  %ymm9,%ymm2,%ymm2
    237a:	c4 c1 65 ef da       	vpxor  %ymm10,%ymm3,%ymm3
    237f:	c4 c1 5d ef e3       	vpxor  %ymm11,%ymm4,%ymm4
    2384:	c4 c1 55 ef ec       	vpxor  %ymm12,%ymm5,%ymm5
    2389:	c4 c1 4d ef f5       	vpxor  %ymm13,%ymm6,%ymm6
    238e:	48 81 c2 88 00 00 00 	add    $0x88,%rdx
    2395:	4c 8d 15 a4 17 00 00 	lea    0x17a4(%rip),%r10        # 3b40 <iotas+0x180>
    239c:	b8 0c 00 00 00       	mov    $0xc,%eax
    23a1:	e8 fa f6 ff ff       	call   1aa0 <__KeccakF1600>
    23a6:	48 83 e9 11          	sub    $0x11,%rcx
    23aa:	0f 83 2b ff ff ff    	jae    22db <KeccakP1600_12rounds_FastLoop_Absorb_Loop17Lanes>
    23b0:	e9 b2 fe ff ff       	jmp    2267 <KeccakP1600_12rounds_FastLoop_Absorb_SaveAndExit>

00000000000023b5 <KeccakP1600_12rounds_FastLoop_Absorb_Not17Lanes>:
    23b5:	4c 8d 0d 04 19 00 00 	lea    0x1904(%rip),%r9        # 3cc0 <mapState>
    23bc:	48 89 f0             	mov    %rsi,%rax

00000000000023bf <KeccakP1600_12rounds_FastLoop_Absorb_LanesAddLoop>:
    23bf:	4c 8b 02             	mov    (%rdx),%r8
    23c2:	48 83 c2 08          	add    $0x8,%rdx
    23c6:	4d 8b 11             	mov    (%r9),%r10
    23c9:	49 83 c1 08          	add    $0x8,%r9
    23cd:	49 01 fa             	add    %rdi,%r10
    23d0:	4d 31 02             	xor    %r8,(%r10)
    23d3:	48 83 e8 01          	sub    $0x1,%rax
    23d7:	75 e6                	jne    23bf <KeccakP1600_12rounds_FastLoop_Absorb_LanesAddLoop>
    23d9:	48 29 f1             	sub    %rsi,%rcx
    23dc:	57                   	push   %rdi
    23dd:	56                   	push   %rsi
    23de:	52                   	push   %rdx
    23df:	51                   	push   %rcx
    23e0:	e8 8c f9 ff ff       	call   1d71 <KeccakP1600_Permute_12rounds>
    23e5:	59                   	pop    %rcx
    23e6:	5a                   	pop    %rdx
    23e7:	5e                   	pop    %rsi
    23e8:	5f                   	pop    %rdi
    23e9:	48 39 f1             	cmp    %rsi,%rcx
    23ec:	73 c7                	jae    23b5 <KeccakP1600_12rounds_FastLoop_Absorb_Not17Lanes>
    23ee:	e9 97 fe ff ff       	jmp    228a <KeccakP1600_12rounds_FastLoop_Absorb_Exit>

Disassembly of section .fini:

00000000000023f4 <_fini>:
    23f4:	f3 0f 1e fa          	endbr64 
    23f8:	48 83 ec 08          	sub    $0x8,%rsp
    23fc:	48 83 c4 08          	add    $0x8,%rsp
    2400:	c3                   	ret    
